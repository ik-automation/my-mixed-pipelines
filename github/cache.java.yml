# source:
# - https://github.com/actions/cache
# - https://github.com/hundanLi/cas-6.2.5/blob/8dfaaed2cb82fa93f68d70c9924328b782586cf6/.github/workflows/cas-build.yml#L38-L58
# tags: ['github action', 'cache', java, cache matrix, sprint boot]

name: CAS

env:
  JAVA_OPTS: "-Xms512m -Xmx6048m -Xss128m -XX:ReservedCodeCacheSize=512m -server -XX:+UseG1GC"
  GRADLE_OPTS: "-Xms512m -Xmx6048m -Xss128m -XX:ReservedCodeCacheSize=512m -server -XX:+UseG1GC"
  TERM: xterm-256color
  SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
  SONATYPE_PWD: ${{ secrets.SONATYPE_PWD }}
  GH_PAGES_TOKEN: ${{ secrets.GH_PAGES_TOKEN }}
  RENOVATE_TOKEN: ${{ secrets.RENOVATE_TOKEN }}
  PYTHON_VERSION: 3.8.2
  JDK_CURRENT: 11.0.7
  JDK_LATEST: 14

##########################################################################

on:
  push:
    branches: [6.2.x]
  pull_request:
    branches: [6.2.x]

##########################################################################

jobs:
  initialize:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.7
      - name: Initialize
        run: ls ./ci && chmod -R 777 ./ci/*.sh && ./ci/init-build.sh

  ##########################################################################
  cache:
    runs-on: ubuntu-latest
    needs: [initialize]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.7
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/checkout@v2
      - name: Download Dependencies
        run: ./gradlew --build-cache --configure-on-demand --no-daemon downloadDependencies --parallel --refresh-dependencies
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
  ##########################################################################

  build:
    needs: [cache]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      #      - name: Setup tmate session
      #        uses: mxschmitt/action-tmate@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_CURRENT }}
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build with Gradle
        run: ./gradlew --build-cache --configure-on-demand --no-daemon build -x test -x javadoc -x check -DskipNestedConfigMetadataGen=true --parallel
      - uses: actions/upload-artifact@v2
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          name: binary-artifacts
          path: ./**/build/libs/*.*

  ##########################################################################

  build-latest:
    runs-on: ubuntu-latest
    needs: [cache]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_LATEST }}
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build with Gradle
        run: ./gradlew --build-cache --configure-on-demand --no-daemon build -x test -x javadoc -x check -DskipNestedConfigMetadataGen=true --parallel

  ##########################################################################

  validate-docs:
    runs-on: ubuntu-latest
    needs: [cache]
    steps:
      - uses: actions/checkout@v2
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Validate Documentation
        if: ${{ !contains(github.head_ref, 'renovate') && github.event_name == 'push' }}
        run: ./ci/validate-documentation.sh

  ##########################################################################

  static-analysis:
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        category:
          - spotbugsMain
          - spotbugsTest
          - checkstyleMain
          - checkstyleTest
    steps:
      - uses: actions/checkout@v2
      #      - name: Setup tmate session
      #        uses: mxschmitt/action-tmate@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_CURRENT }}
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/download-artifact@v2
        with:
          name: binary-artifacts
      - name: Static Analysis
        if: ${{ !contains(github.head_ref, 'renovate') }}
        run: ./gradlew --build-cache --configure-on-demand --parallel --no-daemon ${{ matrix.category }} -x test -x javadoc -DskipNestedConfigMetadataGen=true -DshowStandardStreams=true

  ##########################################################################

  validate-codebase:
    runs-on: ubuntu-latest
    needs: [cache]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_CURRENT }}
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Validate Codebase
        if: ${{ !contains(github.head_ref, 'renovate') }}
        run: ./ci/analyze-codebase.sh

  ##########################################################################

  validate-javadocs:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_CURRENT }}
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/download-artifact@v2
        with:
          name: binary-artifacts
      - name: Validate Javadocs
        if: ${{ !contains(github.head_ref, 'renovate') }}
        run: ./gradlew --build-cache --configure-on-demand --no-daemon --parallel javadoc -x test -x check -DskipNestedConfigMetadataGen=true --parallel

  ##########################################################################

  validate-spring-config-metadata:
    runs-on: ubuntu-latest
    needs: [cache]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_CURRENT }}
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Validate Spring Configuration Metadata
        if: ${{ !contains(github.head_ref, 'renovate') }}
        run: ./gradlew --build-cache --configure-on-demand --no-daemon --parallel :api:cas-server-core-api-configuration-model:build -x check -x test -x javadoc

  ##########################################################################

  validate-spring-config-proxies:
    runs-on: ubuntu-latest
    needs: [cache]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_CURRENT }}
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Validate Spring Configuration Proxies
        if: ${{ !contains(github.head_ref, 'renovate') }}
        run: ./gradlew --build-cache --configure-on-demand --no-daemon --parallel verifySpringConfigurationCanDisableBeanProxying -x javadoc -x check --parallel -DskipNestedConfigMetadataGen=true

  ##########################################################################

  validate-spring-config-factories:
    runs-on: ubuntu-latest
    needs: [cache]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_CURRENT }}
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Validate Spring Configuration Factories
        if: ${{ !contains(github.head_ref, 'renovate') }}
        run: ./gradlew --build-cache --configure-on-demand --no-daemon --parallel verifySpringConfigurationFactories -x javadoc -x check --parallel -DskipNestedConfigMetadataGen=true

  ##########################################################################

  validate-commandline-shell:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_CURRENT }}
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/download-artifact@v2
        with:
          name: binary-artifacts
      - name: Validate CAS Command-line Shell
        if: ${{ !contains(github.head_ref, 'renovate') }}
        run: |
          casVersion=$(./gradlew casVersion --no-daemon -q)
          java -jar support/cas-server-support-shell/build/libs/cas-server-support-shell-${casVersion}.jar @ci/tests/shell/cas-shell-script.sh
  ##########################################################################

  validate-webapp-embedded:
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        category:
          - tomcat
          - jetty
          - undertow
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_CURRENT }}
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/download-artifact@v2
        with:
          name: binary-artifacts
      - name: Validate Web Application Server
        if: ${{ !contains(github.head_ref, 'renovate') }}
        run: ./ci/tests/webapp/validate-embedded-webapp.sh ${{ matrix.category }}

  ##########################################################################

  validate-webapp-external-tomcat:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_CURRENT }}
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/download-artifact@v2
        with:
          name: binary-artifacts
      - name: Validate Web Application Server via External Apache Tomcat
        if: ${{ !contains(github.head_ref, 'renovate') }}
        run: ./ci/tests/webapp/validate-external-webapp.sh tomcat

  ##########################################################################

  validate-spring-cloud-config-server:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_CURRENT }}
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/download-artifact@v2
        with:
          name: binary-artifacts
      - name: Validate Spring Cloud Configuration Server
        if: ${{ !contains(github.head_ref, 'renovate') }}
        run: ./ci/tests/webapp/validate-configserver-webapp.sh

  ##########################################################################

  validate-eureka-discovery-server:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_CURRENT }}
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/download-artifact@v2
        with:
          name: binary-artifacts
      - name: Validate Eureka Discovery Server
        if: ${{ !contains(github.head_ref, 'renovate') }}
        run: ./ci/tests/webapp/validate-eurekaserver-webapp.sh

  ##########################################################################

  validate-spring-boot-admin-server:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_CURRENT }}
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/download-artifact@v2
        with:
          name: binary-artifacts
      - name: Validate Spring Boot Admin Server
        if: ${{ !contains(github.head_ref, 'renovate') }}
        run: ./ci/tests/webapp/validate-bootadmin-webapp.sh

  ##########################################################################

  validate-tests:
    runs-on: ubuntu-latest
    needs: [cache]
    steps:
      - uses: actions/checkout@v2
      #      - name: Setup tmate session
      #        uses: mxschmitt/action-tmate@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_CURRENT }}
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Validate Tests & Test Suites
        if: ${{ !contains(github.head_ref, 'renovate') }}
        run: ./gradlew --build-cache --configure-on-demand --no-daemon --parallel validateTestsSuites -x javadoc

  ##########################################################################

  validate-dependency-licenses:
    runs-on: ubuntu-latest
    needs: [cache]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_CURRENT }}
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Validate Dependency Licenses
        if: ${{ !contains(github.head_ref, 'renovate') }}
        run: ./gradlew --build-cache --configure-on-demand --no-daemon --parallel checkLicense -x javadoc -x check -DskipNestedConfigMetadataGen=true

  ##########################################################################

  publish-snapshots:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_CURRENT }}
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/download-artifact@v2
        with:
          name: binary-artifacts
      - name: Publish SNAPSHOTs
        if: ${{ !contains(github.event.head_commit.message, 'skip snapshots') && github.event_name == 'push' }}
        run: ./gradlew --build-cache --configure-on-demand --no-daemon --parallel -Dorg.gradle.internal.http.socketTimeout=180000 -Dorg.gradle.internal.http.connectionTimeout=180000 build publish -x test -x javadoc -x check -DpublishSnapshots=true -DsonatypeUsername="${SONATYPE_USER}" -DsonatypePassword="${SONATYPE_PWD}"

  ##########################################################################

  publish-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_CURRENT }}
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Publish Documentation
        if: ${{ github.event_name == 'push' }}
        run: ./ci/push-docs-ghpages.sh

  ##########################################################################

  tests:
    runs-on: ubuntu-latest
    needs: [build]
    continue-on-error: true
    strategy:
      matrix:
        category:
          - simple
          - groovy
          - filesystem
          - webflow
          - rest
          - mfa
          - oauth
          - uma
          - oidc
          - saml
          - hazelcast
          - x509
          - ldap
          - shell
          - mongo
          - jmx
          - memcached
          - jdbc
          - mariadb
          - postgres
          - mssql
          - oracle
          - mysql
          - aws
          - ehcache
          - redis
          - dynamodb
          - radius
          - couchdb
          - couchbase
          - mail
          - ignite
          - cassandra
          - influxdb
          - zookeeper
          - jms
          - cosmosdb
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_CURRENT }}
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/download-artifact@v2
        with:
          name: binary-artifacts
      - name: Run Tests
        run: ./testcas.sh --coverage-report --coverage-upload --category ${{ matrix.category }}

  ##########################################################################

  tests-performance-locust:
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        category:
          - tomcat
          - jetty
          - undertow
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_CURRENT }}
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/download-artifact@v2
        with:
          name: binary-artifacts
      - name: Locust Performance Tests via Embedded Apache Tomcat
        run: ./ci/tests/perftests-locust.sh ${{ matrix.category }}

  ##########################################################################

  # report-dependency-updates:
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up JDK
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: ${{ env.JDK_CURRENT }}
  #     - name: Initialize
  #       run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
  #     - uses: actions/cache@v2
  #       with:
  #         path: ~/.gradle/caches
  #         key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
  #         restore-keys: |
  #           ${{ runner.os }}-gradle-
  #     - name: Report Dependency Updates
  #       if: ${{ !contains(github.head_ref, 'renovate') && github.event_name == 'push' }}
  #       run: ./gradlew --build-cache --configure-on-demand --no-daemon --parallel -x test -x javadoc dependencyUpdates -Drevision=release -DskipNestedConfigMetadataGen=true -DgradleReleaseChannel=current

  ##########################################################################

  #  renovate-dependency-updates:
  #    runs-on: ubuntu-latest
  #    needs: [cache]
  #    steps:
  #      - uses: actions/checkout@v2
  #      - name: Set up JDK
  #        uses: actions/setup-java@v1
  #        with:
  #          java-version: ${{ env.JDK_CURRENT }}
  #      - name: Initialize
  #        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
  #      - uses: actions/cache@v2
  #        with:
  #          path: ~/.gradle/caches
  #          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
  #          restore-keys: |
  #            ${{ runner.os }}-gradle-
  #      - uses: renovatebot/github-action@v1.0.0
  #        if: ${{ !contains(github.head_ref, 'renovate') && github.event_name == 'push' }}
  #        with:
  #          token: ${{ secrets.RENOVATE_TOKEN }}
  #          configurationFile: .github/renovate.js

  ##########################################################################

  validate-quality:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_CURRENT }}
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Validate Code Quality via SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
        if: ${{ !contains(github.head_ref, 'renovate') && github.event_name == 'push' }}
        run: ./gradlew --build-cache --configure-on-demand --no-daemon --parallel sonarqube -x javadoc -Dsonar.organization=apereo -Dsonar.host.url=https://sonarcloud.io -Dsonar.login="${SONARCLOUD_TOKEN}" -DskipNestedConfigMetadataGen=true --parallel -DshowStandardStreams=true --info
##########################################################################
