name: secrets
# description: "'serverless' functions to deploy"

on:
  # push:
  #   branches: [main]
  workflow_dispatch:
    inputs:
      env:
        description: "Environment (#dev, #stage or #prod)"
        required: false
        default: dev
        type: choice
        options:
          - dev
          - stage
          - prod
      apply:
        description: "Apply. By default only does the plan without actual apply."
        required: true
        default: false
        type: boolean

env:
  SOURCE_REPO: company/automation-cicd
  SOURCE_REPO_PATH: source
  # defaults
  PROJECT: singleton
  NAMESPACE: helm
  DEFAULT_ENV: dev
  DEFAULT_BRANCH: main
  SERVICE_NAME: secrets
  AWS_DEFAULT_REGION: us-west-2

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3

      - name: build-information
        id: info
        uses: ./.github/actions/info
        with:
          source_branch: ${{ env.DEFAULT_BRANCH  }}
          env: ${{ github.event.inputs.env || env.DEFAULT_ENV }}
          debug: false

      - name: bootstrap-aws
        id: aws
        uses: ./.github/actions/bootstrap-aws
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: secrets-deploy-${{ env.SERVICE_NAME }}
        id: eks
        run: |
          ./scripts/secrets.sh bootstrap
          ./scripts/secrets.sh read_secrets
          ./scripts/secrets.sh helm_plan
          if [ "${APPLY}" = true ] ; then
            ./scripts/secrets.sh helm_apply
          fi
        env:
          ENVIRONMENT: ${{ steps.info.outputs.env }}
          REGION: ${{ env.AWS_DEFAULT_REGION }}
          CLUSTER_NAME: ${{ env.PROJECT }}-${{ steps.info.outputs.env }}-cluster
          SERVICE_NAME: ${{ env.SERVICE_NAME }}
          SERVICE_VERSION: ${{ steps.info.outputs.service_version }}
          TIMESTAMP: ${{ steps.info.outputs.timestamp }}
          APPLY: ${{ github.event.inputs.apply || false }}

      - name: send-slack
        if: ${{ github.event.inputs.apply == 'true' }}
        uses: ./.github/actions/slack
        with:
          payload: |
            {
              "service": "${{ env.SERVICE_NAME }}",
              "buildurl": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}",
              "rebuildurl": "https://github.com/${{github.repository}}/actions/workflows/${{github.workflow}}.yaml",
              "status": "${{ job.status }}",
              "env": "${{ steps.info.outputs.env }}",
              "version": "${{ steps.info.outputs.service_version }}",
              "actor": "${{ github.actor }}"
            }
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
