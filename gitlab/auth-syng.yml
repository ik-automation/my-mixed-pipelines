include:
- template: Security/Dependency-Scanning.gitlab-ci.yml
- template: Security/License-Scanning.gitlab-ci.yml
- template: Security/SAST.gitlab-ci.yml
- template: Security/Secret-Detection.gitlab-ci.yml

image: golang:1.17

stages:
- dependencies
- test
- release

variables:
  BUILD_PARALLELISM: 1

workflow:
  rules:
  - if: $CI_MERGE_REQUEST_ID
  - if: $CI_COMMIT_BRANCH == "master"
  - if: $CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/

.go-cache:
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
  before_script:
  - mkdir -p .go
  cache:
    paths:
    - .go/pkg/mod/

gomod:
  stage: dependencies
  extends: .go-cache
  script:
  - go mod download

lint:
  stage: test
  extends: .go-cache
  image: golangci/golangci-lint:v1.44.0
  script:
  - golangci-lint run -v --timeout 4m --skip-dirs '(^|/).go($|/)'

test:
  stage: test
  extends: .go-cache
  script:
  - ./bin/test.sh
  - go tool cover -func=coverage.txt
  coverage: '/total:\s+\(statements\)\s+(\d+.\d+\%)/'

snapshot-build:
  stage: test
  extends: .go-cache
  image:
    name: goreleaser/goreleaser:v1.4.1
    entrypoint: [""]
  services:
  - docker:dind
  script:
  - goreleaser build --snapshot --rm-dist --single-target -p $BUILD_PARALLELISM
  - dist/eks-auth-sync_linux_amd64/eks-auth-sync -version
  rules:
  - if: $CI_COMMIT_TAG !~ /^v[0-9]+\.[0-9]+\.[0-9]+$/

release:
  stage: release
  image:
    name: goreleaser/goreleaser:v1.4.1
    entrypoint: [""]
  variables:
    GIT_DEPTH: 0
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: /certs
    DOCKER_CERT_PATH: /certs/client
    DOCKER_TLS_VERIFY: "1"
  services:
  - docker:dind
  before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
  - goreleaser release --rm-dist -p $BUILD_PARALLELISM
  rules:
  - if: $CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/
