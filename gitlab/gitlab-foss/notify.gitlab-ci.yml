.notify-slack:
  image: ${GITLAB_DEPENDENCY_PROXY}alpine
  stage: notify
  dependencies: []
  cache: {}
  variables:
    MERGE_REQUEST_URL: ${CI_MERGE_REQUEST_PROJECT_URL}/-/merge_requests/${CI_MERGE_REQUEST_IID}
  before_script:
    - apk update && apk add git curl bash
    - echo "NOTIFY_CHANNEL is ${NOTIFY_CHANNEL}"
    - echo "CI_PIPELINE_URL is ${CI_PIPELINE_URL}"

notify-update-gitaly:
  extends:
    - .notify-slack
  rules:
    - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == $GITALY_UPDATE_BRANCH'
      when: on_failure
      allow_failure: true
  variables:
    NOTIFY_CHANNEL: g_gitaly
    GITALY_UPDATE_BRANCH: release-tools/update-gitaly
  script:
    - scripts/slack ${NOTIFY_CHANNEL} "☠️ \`${GITALY_UPDATE_BRANCH}\` failed! ☠️ See ${CI_PIPELINE_URL} (triggered from ${MERGE_REQUEST_URL})" ci_failing "GitLab QA Bot"

notify-security-pipeline:
  extends:
    - .notify-slack
    - .delivery:rules:security-pipeline-merge-result-failure
  variables:
    NOTIFY_CHANNEL: f_upcoming_release
  script:
    # <!subteam^S0127FU8PDE> mentions the `@release-managers` group
    - scripts/slack ${NOTIFY_CHANNEL} "<!subteam^S0127FU8PDE> ☠️  Pipeline for merged result failed! ☠️ See ${CI_PIPELINE_URL} (triggered from ${MERGE_REQUEST_URL})" ci_failing "GitLab Release Tools Bot"

notify-pipeline-failure:
  extends:
    - .notify-slack
  rules:
    - if: '$NOTIFY_PIPELINE_FAILURE_CHANNEL'
      when: on_failure
      allow_failure: true
  variables:
    NOTIFY_CHANNEL: "${NOTIFY_PIPELINE_FAILURE_CHANNEL}"
  script:
    - scripts/slack ${NOTIFY_CHANNEL} "❌ \`${CI_COMMIT_REF_NAME}\` pipeline failed! See ${CI_PIPELINE_URL}" ci_failing "notify-pipeline-failure"
