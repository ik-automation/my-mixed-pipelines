// https://gitlab.com/gitlab-com/gl-infra/jsonnet-tool/-/blob/main/.gitlab-ci.yml
include:
  # Import ASDF_* variables to match versions declared in ASDF
  - local: .gitlab-ci-asdf-versions.yml
  # We cannot use mergrequest pipeline workflows for chef-repo because
  # we need to run pipelines on the ops.gitlab.net mirror
  - template: 'Workflows/Branch-Pipelines.gitlab-ci.yml'

image: golang:${ASDF_GOLANG_VERSION}

stages:
  - check
  - check_remote
  - test
  - build
  - release

format:
  stage: test
  script:
    - go fmt ./...
    - go vet ./...
    - go test -race ./...

# TODO: these tests are very poor and should be expanded upon!
test:
  stage: test
  script:
    - go build .
    - ./jsonnet-tool yaml -J examples/test_lib -H "# Test" -m ./test_out --prefix yaml_test_ examples/yaml.jsonnet
    - (find test_out/ -name "yaml_test_*" -type f | grep -q ".") || { echo "jsonnet-tool yaml test did not generate any results"; exit 1; }
    - ./jsonnet-tool render -J examples/test_lib  -H "# Test" -m ./test_out --prefix render_test_ examples/render.jsonnet
    - (find test_out/ -name "render_test_*" -type f | grep -q ".") || { echo "jsonnet-tool render test did not generate any results"; exit 1; }

commitlint:
  stage: test
  image: node:${ASDF_NODEJS_MAJOR_VERSION}-alpine3.14
  before_script:
  - apk add --no-cache git
  - npm install
  script:
  - echo "${CI_COMMIT_MESSAGE}" | $(npm bin)/commitlint
  except:
    - main

build:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  variables:
    DOCKER_REGISTRY: $CI_REGISTRY
    DOCKER_USERNAME: $CI_REGISTRY_USER
    DOCKER_PASSWORD: $CI_REGISTRY_PASSWORD
    GIT_DEPTH: 0

  # Only run this release job for tags, not every commit (for example).
  except:
    refs:
      - tags

  script: |
    docker run --rm --privileged \
      -v $PWD:$PWD \
      -w $PWD \
      -v /var/run/docker.sock:/var/run/docker.sock \
      -e DOCKER_USERNAME -e DOCKER_PASSWORD -e DOCKER_REGISTRY  \
      -e GITLAB_TOKEN -e CI_REGISTRY_IMAGE \
      -e CI_SERVER_URL \
      goreleaser/goreleaser:v${ASDF_GORELEASER_VERSION} release --snapshot --rm-dist

semantic_release:
  image: node:${ASDF_NODEJS_MAJOR_VERSION}
  stage: release
  only:
    - main
  variables:
    GITLAB_URL: $CI_SERVER_URL
  script:
    - npm install
    - $(npm bin)/semantic-release

release:
  stage: release
  image: docker:stable
  services:
    - docker:dind
  variables:
    DOCKER_REGISTRY: $CI_REGISTRY
    DOCKER_USERNAME: $CI_REGISTRY_USER
    DOCKER_PASSWORD: $CI_REGISTRY_PASSWORD
    GIT_DEPTH: 0

  # Only run this release job for tags, not every commit (for example).
  only:
    refs:
      - tags

  script: |
    docker run --rm --privileged \
      -v $PWD:$PWD \
      -w $PWD \
      -v /var/run/docker.sock:/var/run/docker.sock \
      -e DOCKER_USERNAME -e DOCKER_PASSWORD -e DOCKER_REGISTRY  \
      -e GITLAB_TOKEN -e CI_REGISTRY_IMAGE \
      -e CI_SERVER_URL \
      goreleaser/goreleaser:v${ASDF_GORELEASER_VERSION} release --rm-dist

##############
# Conditions #
##############

.if-mirror: &if-mirror
  if: '$MIRROR == "true"'

.if-canonical: &if-canonical
  if: '$CANONICAL == "true"'

# Uses Woodhouse (https://gitlab.com/gitlab-com/gl-infra/woodhouse) notification subcommand to add a MR comment on the canonical repository. See CONTRIBUTE.md#project-workflow for more information.
notify_mirror_source:
  allow_failure: true
  rules:
    - <<: *if-mirror
  image: "registry.gitlab.com/gitlab-com/gl-infra/woodhouse:latest"
  script: woodhouse gitlab notify-mirrored-mr
  stage: check

check_remote:
  stage: check_remote
  image: "registry.gitlab.com/gitlab-com/gl-infra/woodhouse:latest"
  script: woodhouse gitlab follow-remote-pipeline --gitlab-api-base-url="https://ops.gitlab.net/api/v4" --gitlab-api-token="$OPS_API_TOKEN"
  rules:
    - <<: *if-canonical
