################################################################
# THIS FILE WAS GENERATED AUTOMATICALLY! DO NOT EDIT MANUALLY! #
################################################################
image: quay.io/helmpack/chart-testing:v3.6.0
integration_test_stackstate:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/stackstate/Chart.yaml  | xargs -I % helm dependencies build stable/stackstate/%
    - helm dependencies update ${CHART}
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/stackstate/**/*
      exists:
        - stable/stackstate/itest/*.go
      if: $CI_COMMIT_TAG
  script:
    - go test ./stable/stackstate/itest/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/stackstate
push_aws-amicleaner_to_internal:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/aws-amicleaner/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/aws-amicleaner
push_aws-nuke_to_internal:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/aws-nuke/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/aws-nuke
push_aws-pod-identity-webhook_to_internal:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/aws-pod-identity-webhook/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/aws-pod-identity-webhook
push_beacher-job_to_internal:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/beacher-job/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/beacher-job
push_chartmuseum_to_internal:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/chartmuseum/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/chartmuseum
push_common_to_internal:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/common/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/common
push_common_to_public:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  needs:
    - push_common_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/common/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/common
push_elasticsearch_to_internal:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/elasticsearch/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/elasticsearch
push_elasticsearch_to_public:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  needs:
    - push_elasticsearch_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/elasticsearch/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/elasticsearch
push_gitlab-steward_to_internal:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/gitlab-steward/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/gitlab-steward
push_hbase_to_internal:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/hbase/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/hbase
push_hbase_to_public:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  needs:
    - push_hbase_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/hbase/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/hbase
push_helm-reaper_to_internal:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/helm-reaper/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/helm-reaper
push_iceman_to_internal:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/iceman/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/iceman
push_kafkaup-operator_to_internal:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/kafkaup-operator/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/kafkaup-operator
push_kafkaup-operator_to_public:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  needs:
    - push_kafkaup-operator_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/kafkaup-operator/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/kafkaup-operator
push_kommoner-operator_to_internal:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/kommoner-operator/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/kommoner-operator
push_minio_to_internal:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/minio/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/minio
push_minio_to_public:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  needs:
    - push_minio_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/minio/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/minio
push_petros-d-kubelet-stats-exporter_to_internal:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/petros-d-kubelet-stats-exporter/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/petros-d-kubelet-stats-exporter
push_pull-secret_to_internal:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/pull-secret/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/pull-secret
push_pull-secret_to_public:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  needs:
    - push_pull-secret_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/pull-secret/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/pull-secret
push_receiveramplifier_to_internal:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/receiveramplifier/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/receiveramplifier
push_sandbox-operator_to_internal:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/sandbox-operator/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/sandbox-operator
push_stackstate-agent_to_internal:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/stackstate-agent/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/stackstate-agent
push_stackstate-agent_to_public:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  needs:
    - push_stackstate-agent_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/stackstate-agent/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/stackstate-agent
push_stackstate-monitoring_to_internal:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/stackstate-monitoring/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/stackstate-monitoring
push_stackstate-monitoring_to_public:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  needs:
    - push_stackstate-monitoring_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/stackstate-monitoring/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/stackstate-monitoring
push_stackstate-standalone_to_internal:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/stackstate-standalone/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/stackstate-standalone
push_stackstate-standalone_to_public:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  needs:
    - push_stackstate-standalone_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/stackstate-standalone/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/stackstate-standalone
push_stackstate_release_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $CI_COMMIT_TAG =~ /^(\d+)\.(\d+)\.(\d+)-pre\.(\d+)\.rc\.(\d+)$/
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^(\d+)\.(\d+)\.(\d+)-rc\.(\d+)$/
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^(\d+)\.(\d+)\.(\d+)$/
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^(\d+)\.(\d+)\.(\d+)-pre\.(\d+)$/
      when: on_success
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/stackstate/Chart.yaml  | xargs -I % helm dependencies build stable/stackstate/%
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/stackstate
push_stackstate_release_to_public:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $CI_COMMIT_TAG =~ /^(\d+)\.(\d+)\.(\d+)$/
      when: on_success
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/stackstate/Chart.yaml  | xargs -I % helm dependencies build stable/stackstate/%
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/stackstate
push_stackstate_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - .gitlab/bump_sts_chart_master_version.sh stackstate-internal
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/stackstate/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/stackstate/Chart.yaml  | xargs -I % helm dependencies build stable/stackstate/%
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/stackstate
push_test_charts:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      when: never
    - if: $CI_COMMIT_TAG
      when: never
    - when: always
  script:
    - source .gitlab/aws_auth_setup.sh
    - sh test/sync-repo.sh
  stage: build
  variables:
    AWS_BUCKET: s3://helm-test.stackstate.io
    REPO_URL: https://helm-test.stackstate.io/
push_trafficmirror_to_internal:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/trafficmirror/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/trafficmirror
push_trafficmirror_to_public:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-4dab71c9
  needs:
    - push_trafficmirror_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/trafficmirror/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
  script:
    - helm dependencies update ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/trafficmirror
stages:
  - validate
  - test
  - update
  - build
  - push-charts-to-internal
  - push-charts-to-public
test_aws-amicleaner:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/aws-amicleaner/**/*
      exists:
        - stable/aws-amicleaner/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/aws-amicleaner/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/aws-amicleaner
test_aws-nuke:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/aws-nuke/**/*
      exists:
        - stable/aws-nuke/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/aws-nuke/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/aws-nuke
test_aws-pod-identity-webhook:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/aws-pod-identity-webhook/**/*
      exists:
        - stable/aws-pod-identity-webhook/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/aws-pod-identity-webhook/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/aws-pod-identity-webhook
test_beacher-job:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/beacher-job/**/*
      exists:
        - stable/beacher-job/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/beacher-job/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/beacher-job
test_chartmuseum:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/chartmuseum/**/*
      exists:
        - stable/chartmuseum/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/chartmuseum/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/chartmuseum
test_common:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/common/**/*
      exists:
        - stable/common/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/common/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/common
test_elasticsearch:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/elasticsearch/**/*
      exists:
        - stable/elasticsearch/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/elasticsearch/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/elasticsearch
test_gitlab-steward:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/gitlab-steward/**/*
      exists:
        - stable/gitlab-steward/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/gitlab-steward/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/gitlab-steward
test_hbase:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/hbase/**/*
      exists:
        - stable/hbase/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/hbase/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/hbase
test_helm-reaper:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/helm-reaper/**/*
      exists:
        - stable/helm-reaper/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/helm-reaper/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/helm-reaper
test_iceman:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/iceman/**/*
      exists:
        - stable/iceman/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/iceman/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/iceman
test_kafkaup-operator:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/kafkaup-operator/**/*
      exists:
        - stable/kafkaup-operator/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/kafkaup-operator/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/kafkaup-operator
test_kommoner-operator:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/kommoner-operator/**/*
      exists:
        - stable/kommoner-operator/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/kommoner-operator/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/kommoner-operator
test_minio:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/minio/**/*
      exists:
        - stable/minio/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/minio/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/minio
test_petros-d-kubelet-stats-exporter:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/petros-d-kubelet-stats-exporter/**/*
      exists:
        - stable/petros-d-kubelet-stats-exporter/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/petros-d-kubelet-stats-exporter/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/petros-d-kubelet-stats-exporter
test_pull-secret:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/pull-secret/**/*
      exists:
        - stable/pull-secret/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/pull-secret/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/pull-secret
test_receiveramplifier:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/receiveramplifier/**/*
      exists:
        - stable/receiveramplifier/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/receiveramplifier/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/receiveramplifier
test_sandbox-operator:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/sandbox-operator/**/*
      exists:
        - stable/sandbox-operator/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/sandbox-operator/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/sandbox-operator
test_stackstate:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/stackstate/Chart.yaml  | xargs -I % helm dependencies build stable/stackstate/%
    - helm dependencies update ${CHART}
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/stackstate/**/*
      exists:
        - stable/stackstate/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/stackstate/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/stackstate
test_stackstate-agent:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/stackstate-agent/**/*
      exists:
        - stable/stackstate-agent/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/stackstate-agent/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/stackstate-agent
test_stackstate-monitoring:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/stackstate-monitoring/**/*
      exists:
        - stable/stackstate-monitoring/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/stackstate-monitoring/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/stackstate-monitoring
test_stackstate-standalone:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/stackstate-standalone/**/*
      exists:
        - stable/stackstate-standalone/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/stackstate-standalone/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/stackstate-standalone
test_trafficmirror:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - changes:
        - stable/trafficmirror/**/*
      exists:
        - stable/trafficmirror/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/trafficmirror/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/trafficmirror
update_aad_chart_version:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-4dab71c9
  rules:
    - if: $UPDATE_AAD_CHART_VERSION
      when: always
  script:
    - .gitlab/update_chart_version.sh stable/stackstate anomaly-detection $UPDATE_AAD_CHART_VERSION
    - .gitlab/commit_changes_and_push.sh anomaly-detection $UPDATE_AAD_CHART_VERSION
  stage: update
  variables:
    GIT_AUTHOR_EMAIL: sts-admin@stackstate.com
    GIT_AUTHOR_NAME: stackstate-system-user
    GIT_COMMITTER_EMAIL: sts-admin@stackstate.com
    GIT_COMMITTER_NAME: stackstate-system-user
update_stackgraph_version:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-4dab71c9
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: always
  script:
    - .gitlab/update_sg_version.sh stable/hbase ""
    - .gitlab/update_chart_version.sh stable/stackstate hbase local:stable/hbase
    - .gitlab/commit_changes_and_push.sh StackGraph $UPDATE_STACKGRAPH_VERSION
  stage: update
  variables:
    GIT_AUTHOR_EMAIL: sts-admin@stackstate.com
    GIT_AUTHOR_NAME: stackstate-system-user
    GIT_COMMITTER_EMAIL: sts-admin@stackstate.com
    GIT_COMMITTER_NAME: stackstate-system-user
validate_charts:
  before_script:
    - .gitlab/validate_before_script.sh
  environment: stseuw1-sandbox-main-eks-sandbox/${CI_COMMIT_REF_NAME}
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $CI_COMMIT_BRANCH == "master"
      when: never
    - when: always
  script:
    - ct list-changed --config test/ct.yaml
    - if [[ "${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}" =~ ^releasing*|^developing* ]] || [[ -n "${CI_COMMIT_TAG}" ]] ; then export VERSION_INCREMENT_CHECK="--check-version-increment=false" ; fi
    - ct lint --debug --validate-maintainers=false ${VERSION_INCREMENT_CHECK} --excluded-charts stackstate --excluded-charts gitlab-runner --config test/ct.yaml
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_stackstate_chart:
  before_script:
    - .gitlab/validate_before_script.sh
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
  environment: stseuw1-sandbox-main-eks-sandbox/${CI_COMMIT_REF_NAME}
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $CI_COMMIT_BRANCH == "master"
      when: never
    - when: always
  script:
    - ct list-changed --config test/ct.yaml
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/stackstate/Chart.yaml  | xargs -I % helm dependencies build stable/stackstate/%
    - ct lint --debug --validate-maintainers=false --charts stable/stackstate --config test/ct.yaml
    - .gitlab/validate_kubeconform.sh
  stage: validate
variables:
  HELM_VERSION: v3.1.2
workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
