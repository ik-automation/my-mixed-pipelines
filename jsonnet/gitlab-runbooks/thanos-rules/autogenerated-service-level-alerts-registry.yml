# WARNING. DO NOT EDIT THIS FILE BY HAND. USE ./thanos-rules-jsonnet/service-component-alerts.jsonnet TO GENERATE IT
# YOUR CHANGES WILL BE OVERRIDDEN
groups:
- name: 'Service Component Alerts: registry'
  interval: 1m
  partial_response_strategy: warn
  rules:
  - alert: RegistryServiceDatabaseApdexSLOViolation
    for: 2m
    annotations:
      title: The database SLI of the registry service (`{{ $labels.stage }}` stage)
        has an apdex violating SLO
      description: |
        Aggregation of all container registry database operations.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3734296734"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(registry_database_query_duration_seconds_bucket{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type="registry"}[5m])
          )
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="database",monitor="global",type="registry"}
          < (1 - 14.4 * 0.003000)
        )
        and
        (
          gitlab_component_apdex:ratio_5m{component="database",monitor="global",type="registry"}
          < (1 - 14.4 * 0.003000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="database",monitor="global",type="registry"}) >= 1
      )
  - alert: RegistryServiceDatabaseApdexSLOViolation
    for: 2m
    annotations:
      title: The database SLI of the registry service (`{{ $labels.stage }}` stage)
        has an apdex violating SLO
      description: |
        Aggregation of all container registry database operations.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3734296734"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(registry_database_query_duration_seconds_bucket{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type="registry"}[5m])
          )
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_6h{component="database",monitor="global",type="registry"}
          < (1 - 6 * 0.003000)
        )
        and
        (
          gitlab_component_apdex:ratio_30m{component="database",monitor="global",type="registry"}
          < (1 - 6 * 0.003000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="database",monitor="global",type="registry"}) >= 0.16667
      )
  - alert: RegistryServiceDatabaseApdexSLOViolationRegional
    for: 2m
    annotations:
      title: The database SLI of the registry service in region `{{ $labels.region
        }}` has an apdex violating SLO
      description: |
        Aggregation of all container registry database operations.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3734296734"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,region,le) (
            rate(registry_database_query_duration_seconds_bucket{environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="registry"}[5m])
          )
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_regional_sli_apdex:ratio_1h{component="database",monitor="global",type="registry"}
          < (1 - 14.4 * 0.003000)
        )
        and
        (
          gitlab_regional_sli_apdex:ratio_5m{component="database",monitor="global",type="registry"}
          < (1 - 14.4 * 0.003000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_1h{component="database",monitor="global",type="registry"}) >= 1
      )
  - alert: RegistryServiceDatabaseApdexSLOViolationRegional
    for: 2m
    annotations:
      title: The database SLI of the registry service in region `{{ $labels.region
        }}` has an apdex violating SLO
      description: |
        Aggregation of all container registry database operations.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3734296734"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,region,le) (
            rate(registry_database_query_duration_seconds_bucket{environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="registry"}[5m])
          )
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_regional_sli_apdex:ratio_6h{component="database",monitor="global",type="registry"}
          < (1 - 6 * 0.003000)
        )
        and
        (
          gitlab_regional_sli_apdex:ratio_30m{component="database",monitor="global",type="registry"}
          < (1 - 6 * 0.003000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_6h{component="database",monitor="global",type="registry"}) >= 0.16667
      )
  - alert: RegistryServiceDatabaseTrafficCessation
    for: 5m
    annotations:
      title: The database SLI of the registry service (`{{ $labels.stage }}` stage)
        has not received any traffic in the past 30m
      description: |
        Aggregation of all container registry database operations.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2984148133"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(registry_database_queries_total{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type="registry"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="database",monitor="global",stage="main",type="registry"} == 0
      and
      gitlab_component_ops:rate_30m{component="database",monitor="global",stage="main",type="registry"} offset 1h >= 0.16666666666666666
  - alert: RegistryServiceDatabaseTrafficAbsent
    for: 30m
    annotations:
      title: The database SLI of the registry service (`{{ $labels.stage }}` stage)
        has not reported any traffic in the past 30m
      description: |
        Aggregation of all container registry database operations.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2984148133"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(registry_database_queries_total{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type="registry"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="database",monitor="global",stage="main",type="registry"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="database",monitor="global",stage="main",type="registry"}
  - alert: RegistryServiceDatabaseTrafficCessationRegional
    for: 5m
    annotations:
      title: The database SLI of the registry service in region `{{ $labels.region
        }}` has not received any traffic in the past 30m
      description: |
        Aggregation of all container registry database operations.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2984148133"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(registry_database_queries_total{environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="registry"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_30m{component="database",monitor="global",stage="main",type="registry"} == 0
      and
      gitlab_regional_sli_ops:rate_30m{component="database",monitor="global",stage="main",type="registry"} offset 1h >= 0.16666666666666666
  - alert: RegistryServiceDatabaseTrafficAbsentRegional
    for: 30m
    annotations:
      title: The database SLI of the registry service in region `{{ $labels.region
        }}` has not reported any traffic in the past 30m
      description: |
        Aggregation of all container registry database operations.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2984148133"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(registry_database_queries_total{environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="registry"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_5m{component="database",monitor="global",stage="main",type="registry"} offset 1h
      unless
      gitlab_regional_sli_ops:rate_5m{component="database",monitor="global",stage="main",type="registry"}
  - alert: RegistryServiceGarbagecollectorApdexSLOViolation
    for: 2m
    annotations:
      title: The garbagecollector SLI of the registry service (`{{ $labels.stage }}`
        stage) has an apdex violating SLO
      description: |
        Aggregation of all container registry online garbage collection operations.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2354862550"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(registry_gc_run_duration_seconds_bucket{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type="registry"}[5m])
          )
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      rules_domain: general
      severity: s3
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "no"
      window: 1h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="garbagecollector",monitor="global",type="registry"}
          < (1 - 14.4 * 0.003000)
        )
        and
        (
          gitlab_component_apdex:ratio_5m{component="garbagecollector",monitor="global",type="registry"}
          < (1 - 14.4 * 0.003000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="garbagecollector",monitor="global",type="registry"}) >= 1
      )
  - alert: RegistryServiceGarbagecollectorApdexSLOViolation
    for: 2m
    annotations:
      title: The garbagecollector SLI of the registry service (`{{ $labels.stage }}`
        stage) has an apdex violating SLO
      description: |
        Aggregation of all container registry online garbage collection operations.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2354862550"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(registry_gc_run_duration_seconds_bucket{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type="registry"}[5m])
          )
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      rules_domain: general
      severity: s3
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "no"
      window: 6h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_6h{component="garbagecollector",monitor="global",type="registry"}
          < (1 - 6 * 0.003000)
        )
        and
        (
          gitlab_component_apdex:ratio_30m{component="garbagecollector",monitor="global",type="registry"}
          < (1 - 6 * 0.003000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="garbagecollector",monitor="global",type="registry"}) >= 0.16667
      )
  - alert: RegistryServiceGarbagecollectorApdexSLOViolationRegional
    for: 2m
    annotations:
      title: The garbagecollector SLI of the registry service in region `{{ $labels.region
        }}` has an apdex violating SLO
      description: |
        Aggregation of all container registry online garbage collection operations.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2354862550"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,region,le) (
            rate(registry_gc_run_duration_seconds_bucket{environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="registry"}[5m])
          )
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      rules_domain: general
      severity: s3
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "no"
      window: 1h
    expr: |
      (
        (
          gitlab_regional_sli_apdex:ratio_1h{component="garbagecollector",monitor="global",type="registry"}
          < (1 - 14.4 * 0.003000)
        )
        and
        (
          gitlab_regional_sli_apdex:ratio_5m{component="garbagecollector",monitor="global",type="registry"}
          < (1 - 14.4 * 0.003000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_1h{component="garbagecollector",monitor="global",type="registry"}) >= 1
      )
  - alert: RegistryServiceGarbagecollectorApdexSLOViolationRegional
    for: 2m
    annotations:
      title: The garbagecollector SLI of the registry service in region `{{ $labels.region
        }}` has an apdex violating SLO
      description: |
        Aggregation of all container registry online garbage collection operations.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2354862550"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,region,le) (
            rate(registry_gc_run_duration_seconds_bucket{environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="registry"}[5m])
          )
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      rules_domain: general
      severity: s3
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "no"
      window: 6h
    expr: |
      (
        (
          gitlab_regional_sli_apdex:ratio_6h{component="garbagecollector",monitor="global",type="registry"}
          < (1 - 6 * 0.003000)
        )
        and
        (
          gitlab_regional_sli_apdex:ratio_30m{component="garbagecollector",monitor="global",type="registry"}
          < (1 - 6 * 0.003000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_6h{component="garbagecollector",monitor="global",type="registry"}) >= 0.16667
      )
  - alert: RegistryServiceGarbagecollectorErrorSLOViolation
    for: 2m
    annotations:
      title: The garbagecollector SLI of the registry service (`{{ $labels.stage }}`
        stage) has an error rate violating SLO
      description: |
        Aggregation of all container registry online garbage collection operations.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "175676838"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(registry_gc_runs_total{environment="{{ $labels.environment }}",error="true",stage="{{ $labels.stage }}",type="registry"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      rules_domain: general
      severity: s3
      sli_type: error
      slo_alert: "yes"
      user_impacting: "no"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="garbagecollector",monitor="global",type="registry"}
          > (14.4 * 0.000100)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="garbagecollector",monitor="global",type="registry"}
          > (14.4 * 0.000100)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="garbagecollector",monitor="global",type="registry"}) >= 1
      )
  - alert: RegistryServiceGarbagecollectorErrorSLOViolation
    for: 2m
    annotations:
      title: The garbagecollector SLI of the registry service (`{{ $labels.stage }}`
        stage) has an error rate violating SLO
      description: |
        Aggregation of all container registry online garbage collection operations.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "175676838"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(registry_gc_runs_total{environment="{{ $labels.environment }}",error="true",stage="{{ $labels.stage }}",type="registry"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      rules_domain: general
      severity: s3
      sli_type: error
      slo_alert: "yes"
      user_impacting: "no"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="garbagecollector",monitor="global",type="registry"}
          > (6 * 0.000100)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="garbagecollector",monitor="global",type="registry"}
          > (6 * 0.000100)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="garbagecollector",monitor="global",type="registry"}) >= 0.16667
      )
  - alert: RegistryServiceGarbagecollectorErrorSLOViolationRegional
    for: 2m
    annotations:
      title: The garbagecollector SLI of the registry service in region `{{ $labels.region
        }}` has an error rate violating SLO
      description: |
        Aggregation of all container registry online garbage collection operations.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "175676838"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(registry_gc_runs_total{environment="{{ $labels.environment }}",error="true",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="registry"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      rules_domain: general
      severity: s3
      sli_type: error
      slo_alert: "yes"
      user_impacting: "no"
      window: 1h
    expr: |
      (
        (
          gitlab_regional_sli_errors:ratio_1h{component="garbagecollector",monitor="global",type="registry"}
          > (14.4 * 0.000100)
        )
        and
        (
          gitlab_regional_sli_errors:ratio_5m{component="garbagecollector",monitor="global",type="registry"}
          > (14.4 * 0.000100)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_1h{component="garbagecollector",monitor="global",type="registry"}) >= 1
      )
  - alert: RegistryServiceGarbagecollectorErrorSLOViolationRegional
    for: 2m
    annotations:
      title: The garbagecollector SLI of the registry service in region `{{ $labels.region
        }}` has an error rate violating SLO
      description: |
        Aggregation of all container registry online garbage collection operations.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "175676838"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(registry_gc_runs_total{environment="{{ $labels.environment }}",error="true",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="registry"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      rules_domain: general
      severity: s3
      sli_type: error
      slo_alert: "yes"
      user_impacting: "no"
      window: 6h
    expr: |
      (
        (
          gitlab_regional_sli_errors:ratio_6h{component="garbagecollector",monitor="global",type="registry"}
          > (6 * 0.000100)
        )
        and
        (
          gitlab_regional_sli_errors:ratio_30m{component="garbagecollector",monitor="global",type="registry"}
          > (6 * 0.000100)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_6h{component="garbagecollector",monitor="global",type="registry"}) >= 0.16667
      )
  - alert: RegistryServiceGarbagecollectorTrafficCessation
    for: 5m
    annotations:
      title: The garbagecollector SLI of the registry service (`{{ $labels.stage }}`
        stage) has not received any traffic in the past 30m
      description: |
        Aggregation of all container registry online garbage collection operations.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3281014584"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(registry_gc_runs_total{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type="registry"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: container_registry
      rules_domain: general
      severity: s3
      sli_type: ops
      slo_alert: "no"
      user_impacting: "no"
    expr: |
      gitlab_component_ops:rate_30m{component="garbagecollector",monitor="global",stage="main",type="registry"} == 0
      and
      gitlab_component_ops:rate_30m{component="garbagecollector",monitor="global",stage="main",type="registry"} offset 1h >= 0.16666666666666666
  - alert: RegistryServiceGarbagecollectorTrafficAbsent
    for: 30m
    annotations:
      title: The garbagecollector SLI of the registry service (`{{ $labels.stage }}`
        stage) has not reported any traffic in the past 30m
      description: |
        Aggregation of all container registry online garbage collection operations.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3281014584"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(registry_gc_runs_total{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type="registry"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: container_registry
      rules_domain: general
      severity: s3
      sli_type: ops
      slo_alert: "no"
      user_impacting: "no"
    expr: |
      gitlab_component_ops:rate_5m{component="garbagecollector",monitor="global",stage="main",type="registry"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="garbagecollector",monitor="global",stage="main",type="registry"}
  - alert: RegistryServiceGarbagecollectorTrafficCessationRegional
    for: 5m
    annotations:
      title: The garbagecollector SLI of the registry service in region `{{ $labels.region
        }}` has not received any traffic in the past 30m
      description: |
        Aggregation of all container registry online garbage collection operations.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3281014584"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(registry_gc_runs_total{environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="registry"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: container_registry
      rules_domain: general
      severity: s3
      sli_type: ops
      slo_alert: "no"
      user_impacting: "no"
    expr: |
      gitlab_regional_sli_ops:rate_30m{component="garbagecollector",monitor="global",stage="main",type="registry"} == 0
      and
      gitlab_regional_sli_ops:rate_30m{component="garbagecollector",monitor="global",stage="main",type="registry"} offset 1h >= 0.16666666666666666
  - alert: RegistryServiceGarbagecollectorTrafficAbsentRegional
    for: 30m
    annotations:
      title: The garbagecollector SLI of the registry service in region `{{ $labels.region
        }}` has not reported any traffic in the past 30m
      description: |
        Aggregation of all container registry online garbage collection operations.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3281014584"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(registry_gc_runs_total{environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="registry"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: container_registry
      rules_domain: general
      severity: s3
      sli_type: ops
      slo_alert: "no"
      user_impacting: "no"
    expr: |
      gitlab_regional_sli_ops:rate_5m{component="garbagecollector",monitor="global",stage="main",type="registry"} offset 1h
      unless
      gitlab_regional_sli_ops:rate_5m{component="garbagecollector",monitor="global",stage="main",type="registry"}
  - alert: RegistryServiceLoadbalancerErrorSLOViolation
    for: 2m
    annotations:
      title: The loadbalancer SLI of the registry service (`{{ $labels.stage }}` stage)
        has an error rate violating SLO
      description: |
        Measures aggregated HTTP request traffic through the HAProxy. 5xx responses are considered to be failures.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3255520955"
      grafana_variables: environment,stage
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="loadbalancer",monitor="global",type="registry"}
          > (14.4 * 0.000100)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="loadbalancer",monitor="global",type="registry"}
          > (14.4 * 0.000100)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="loadbalancer",monitor="global",type="registry"}) >= 1
      )
  - alert: RegistryServiceLoadbalancerErrorSLOViolation
    for: 2m
    annotations:
      title: The loadbalancer SLI of the registry service (`{{ $labels.stage }}` stage)
        has an error rate violating SLO
      description: |
        Measures aggregated HTTP request traffic through the HAProxy. 5xx responses are considered to be failures.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3255520955"
      grafana_variables: environment,stage
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="loadbalancer",monitor="global",type="registry"}
          > (6 * 0.000100)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="loadbalancer",monitor="global",type="registry"}
          > (6 * 0.000100)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="loadbalancer",monitor="global",type="registry"}) >= 0.16667
      )
  - alert: RegistryServiceLoadbalancerErrorSLOViolationRegional
    for: 2m
    annotations:
      title: The loadbalancer SLI of the registry service in region `{{ $labels.region
        }}` has an error rate violating SLO
      description: |
        Measures aggregated HTTP request traffic through the HAProxy. 5xx responses are considered to be failures.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3255520955"
      grafana_variables: environment,stage
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_regional_sli_errors:ratio_1h{component="loadbalancer",monitor="global",type="registry"}
          > (14.4 * 0.000100)
        )
        and
        (
          gitlab_regional_sli_errors:ratio_5m{component="loadbalancer",monitor="global",type="registry"}
          > (14.4 * 0.000100)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_1h{component="loadbalancer",monitor="global",type="registry"}) >= 1
      )
  - alert: RegistryServiceLoadbalancerErrorSLOViolationRegional
    for: 2m
    annotations:
      title: The loadbalancer SLI of the registry service in region `{{ $labels.region
        }}` has an error rate violating SLO
      description: |
        Measures aggregated HTTP request traffic through the HAProxy. 5xx responses are considered to be failures.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3255520955"
      grafana_variables: environment,stage
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_regional_sli_errors:ratio_6h{component="loadbalancer",monitor="global",type="registry"}
          > (6 * 0.000100)
        )
        and
        (
          gitlab_regional_sli_errors:ratio_30m{component="loadbalancer",monitor="global",type="registry"}
          > (6 * 0.000100)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_6h{component="loadbalancer",monitor="global",type="registry"}) >= 0.16667
      )
  - alert: RegistryServiceLoadbalancerTrafficCessation
    for: 5m
    annotations:
      title: The loadbalancer SLI of the registry service (`{{ $labels.stage }}` stage)
        has not received any traffic in the past 30m
      description: |
        Measures aggregated HTTP request traffic through the HAProxy. 5xx responses are considered to be failures.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "138982496"
      grafana_variables: environment,stage
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="loadbalancer",monitor="global",stage="main",type="registry"} == 0
      and
      gitlab_component_ops:rate_30m{component="loadbalancer",monitor="global",stage="main",type="registry"} offset 1h >= 0.16666666666666666
  - alert: RegistryServiceLoadbalancerTrafficAbsent
    for: 30m
    annotations:
      title: The loadbalancer SLI of the registry service (`{{ $labels.stage }}` stage)
        has not reported any traffic in the past 30m
      description: |
        Measures aggregated HTTP request traffic through the HAProxy. 5xx responses are considered to be failures.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "138982496"
      grafana_variables: environment,stage
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="loadbalancer",monitor="global",stage="main",type="registry"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="loadbalancer",monitor="global",stage="main",type="registry"}
  - alert: RegistryServiceLoadbalancerTrafficCessationRegional
    for: 5m
    annotations:
      title: The loadbalancer SLI of the registry service in region `{{ $labels.region
        }}` has not received any traffic in the past 30m
      description: |
        Measures aggregated HTTP request traffic through the HAProxy. 5xx responses are considered to be failures.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "138982496"
      grafana_variables: environment,stage
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_30m{component="loadbalancer",monitor="global",stage="main",type="registry"} == 0
      and
      gitlab_regional_sli_ops:rate_30m{component="loadbalancer",monitor="global",stage="main",type="registry"} offset 1h >= 0.16666666666666666
  - alert: RegistryServiceLoadbalancerTrafficAbsentRegional
    for: 30m
    annotations:
      title: The loadbalancer SLI of the registry service in region `{{ $labels.region
        }}` has not reported any traffic in the past 30m
      description: |
        Measures aggregated HTTP request traffic through the HAProxy. 5xx responses are considered to be failures.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "138982496"
      grafana_variables: environment,stage
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_5m{component="loadbalancer",monitor="global",stage="main",type="registry"} offset 1h
      unless
      gitlab_regional_sli_ops:rate_5m{component="loadbalancer",monitor="global",stage="main",type="registry"}
  - alert: RegistryServiceRedisApdexSLOViolation
    for: 2m
    annotations:
      title: The redis SLI of the registry service (`{{ $labels.stage }}` stage) has
        an apdex violating SLO
      description: |
        Aggregation of all container registry Redis operations.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "4221579207"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(registry_redis_single_commands_bucket{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type="registry"}[5m])
          )
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="redis",monitor="global",type="registry"}
          < (1 - 14.4 * 0.003000)
        )
        and
        (
          gitlab_component_apdex:ratio_5m{component="redis",monitor="global",type="registry"}
          < (1 - 14.4 * 0.003000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="redis",monitor="global",type="registry"}) >= 1
      )
  - alert: RegistryServiceRedisApdexSLOViolation
    for: 2m
    annotations:
      title: The redis SLI of the registry service (`{{ $labels.stage }}` stage) has
        an apdex violating SLO
      description: |
        Aggregation of all container registry Redis operations.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "4221579207"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(registry_redis_single_commands_bucket{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type="registry"}[5m])
          )
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_6h{component="redis",monitor="global",type="registry"}
          < (1 - 6 * 0.003000)
        )
        and
        (
          gitlab_component_apdex:ratio_30m{component="redis",monitor="global",type="registry"}
          < (1 - 6 * 0.003000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="redis",monitor="global",type="registry"}) >= 0.16667
      )
  - alert: RegistryServiceRedisApdexSLOViolationRegional
    for: 2m
    annotations:
      title: The redis SLI of the registry service in region `{{ $labels.region }}`
        has an apdex violating SLO
      description: |
        Aggregation of all container registry Redis operations.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "4221579207"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,region,le) (
            rate(registry_redis_single_commands_bucket{environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="registry"}[5m])
          )
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_regional_sli_apdex:ratio_1h{component="redis",monitor="global",type="registry"}
          < (1 - 14.4 * 0.003000)
        )
        and
        (
          gitlab_regional_sli_apdex:ratio_5m{component="redis",monitor="global",type="registry"}
          < (1 - 14.4 * 0.003000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_1h{component="redis",monitor="global",type="registry"}) >= 1
      )
  - alert: RegistryServiceRedisApdexSLOViolationRegional
    for: 2m
    annotations:
      title: The redis SLI of the registry service in region `{{ $labels.region }}`
        has an apdex violating SLO
      description: |
        Aggregation of all container registry Redis operations.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "4221579207"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,region,le) (
            rate(registry_redis_single_commands_bucket{environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="registry"}[5m])
          )
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_regional_sli_apdex:ratio_6h{component="redis",monitor="global",type="registry"}
          < (1 - 6 * 0.003000)
        )
        and
        (
          gitlab_regional_sli_apdex:ratio_30m{component="redis",monitor="global",type="registry"}
          < (1 - 6 * 0.003000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_6h{component="redis",monitor="global",type="registry"}) >= 0.16667
      )
  - alert: RegistryServiceRedisErrorSLOViolation
    for: 2m
    annotations:
      title: The redis SLI of the registry service (`{{ $labels.stage }}` stage) has
        an error rate violating SLO
      description: |
        Aggregation of all container registry Redis operations.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "4246863748"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(registry_redis_single_errors_count{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type="registry"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="redis",monitor="global",type="registry"}
          > (14.4 * 0.000100)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="redis",monitor="global",type="registry"}
          > (14.4 * 0.000100)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="redis",monitor="global",type="registry"}) >= 1
      )
  - alert: RegistryServiceRedisErrorSLOViolation
    for: 2m
    annotations:
      title: The redis SLI of the registry service (`{{ $labels.stage }}` stage) has
        an error rate violating SLO
      description: |
        Aggregation of all container registry Redis operations.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "4246863748"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(registry_redis_single_errors_count{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type="registry"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="redis",monitor="global",type="registry"}
          > (6 * 0.000100)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="redis",monitor="global",type="registry"}
          > (6 * 0.000100)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="redis",monitor="global",type="registry"}) >= 0.16667
      )
  - alert: RegistryServiceRedisErrorSLOViolationRegional
    for: 2m
    annotations:
      title: The redis SLI of the registry service in region `{{ $labels.region }}`
        has an error rate violating SLO
      description: |
        Aggregation of all container registry Redis operations.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "4246863748"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(registry_redis_single_errors_count{environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="registry"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_regional_sli_errors:ratio_1h{component="redis",monitor="global",type="registry"}
          > (14.4 * 0.000100)
        )
        and
        (
          gitlab_regional_sli_errors:ratio_5m{component="redis",monitor="global",type="registry"}
          > (14.4 * 0.000100)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_1h{component="redis",monitor="global",type="registry"}) >= 1
      )
  - alert: RegistryServiceRedisErrorSLOViolationRegional
    for: 2m
    annotations:
      title: The redis SLI of the registry service in region `{{ $labels.region }}`
        has an error rate violating SLO
      description: |
        Aggregation of all container registry Redis operations.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "4246863748"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(registry_redis_single_errors_count{environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="registry"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_regional_sli_errors:ratio_6h{component="redis",monitor="global",type="registry"}
          > (6 * 0.000100)
        )
        and
        (
          gitlab_regional_sli_errors:ratio_30m{component="redis",monitor="global",type="registry"}
          > (6 * 0.000100)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_6h{component="redis",monitor="global",type="registry"}) >= 0.16667
      )
  - alert: RegistryServiceRedisTrafficCessation
    for: 5m
    annotations:
      title: The redis SLI of the registry service (`{{ $labels.stage }}` stage) has
        not received any traffic in the past 30m
      description: |
        Aggregation of all container registry Redis operations.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3565255509"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(registry_redis_single_commands_count{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type="registry"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="redis",monitor="global",stage="main",type="registry"} == 0
      and
      gitlab_component_ops:rate_30m{component="redis",monitor="global",stage="main",type="registry"} offset 1h >= 0.16666666666666666
  - alert: RegistryServiceRedisTrafficAbsent
    for: 30m
    annotations:
      title: The redis SLI of the registry service (`{{ $labels.stage }}` stage) has
        not reported any traffic in the past 30m
      description: |
        Aggregation of all container registry Redis operations.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3565255509"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(registry_redis_single_commands_count{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type="registry"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="redis",monitor="global",stage="main",type="registry"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="redis",monitor="global",stage="main",type="registry"}
  - alert: RegistryServiceRedisTrafficCessationRegional
    for: 5m
    annotations:
      title: The redis SLI of the registry service in region `{{ $labels.region }}`
        has not received any traffic in the past 30m
      description: |
        Aggregation of all container registry Redis operations.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3565255509"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(registry_redis_single_commands_count{environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="registry"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_30m{component="redis",monitor="global",stage="main",type="registry"} == 0
      and
      gitlab_regional_sli_ops:rate_30m{component="redis",monitor="global",stage="main",type="registry"} offset 1h >= 0.16666666666666666
  - alert: RegistryServiceRedisTrafficAbsentRegional
    for: 30m
    annotations:
      title: The redis SLI of the registry service in region `{{ $labels.region }}`
        has not reported any traffic in the past 30m
      description: |
        Aggregation of all container registry Redis operations.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3565255509"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(registry_redis_single_commands_count{environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="registry"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_5m{component="redis",monitor="global",stage="main",type="registry"} offset 1h
      unless
      gitlab_regional_sli_ops:rate_5m{component="redis",monitor="global",stage="main",type="registry"}
  - alert: RegistryServiceServerApdexSLOViolation
    for: 2m
    annotations:
      title: The server SLI of the registry service (`{{ $labels.stage }}` stage)
        has an apdex violating SLO
      description: |
        Aggregation of all registry requests.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2863319079"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(registry_http_request_duration_seconds_bucket{environment="{{ $labels.environment }}",route!~"/v2/{name}/manifests/{reference}",stage="{{ $labels.stage }}",type="registry"}[5m])
          )
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="server",monitor="global",type="registry"}
          < (1 - 14.4 * 0.003000)
        )
        and
        (
          gitlab_component_apdex:ratio_5m{component="server",monitor="global",type="registry"}
          < (1 - 14.4 * 0.003000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="server",monitor="global",type="registry"}) >= 1
      )
  - alert: RegistryServiceServerApdexSLOViolation
    for: 2m
    annotations:
      title: The server SLI of the registry service (`{{ $labels.stage }}` stage)
        has an apdex violating SLO
      description: |
        Aggregation of all registry requests.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2863319079"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(registry_http_request_duration_seconds_bucket{environment="{{ $labels.environment }}",route!~"/v2/{name}/manifests/{reference}",stage="{{ $labels.stage }}",type="registry"}[5m])
          )
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_6h{component="server",monitor="global",type="registry"}
          < (1 - 6 * 0.003000)
        )
        and
        (
          gitlab_component_apdex:ratio_30m{component="server",monitor="global",type="registry"}
          < (1 - 6 * 0.003000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="server",monitor="global",type="registry"}) >= 0.16667
      )
  - alert: RegistryServiceServerApdexSLOViolationRegional
    for: 2m
    annotations:
      title: The server SLI of the registry service in region `{{ $labels.region }}`
        has an apdex violating SLO
      description: |
        Aggregation of all registry requests.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2863319079"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,region,le) (
            rate(registry_http_request_duration_seconds_bucket{environment="{{ $labels.environment }}",region="{{ $labels.region }}",route!~"/v2/{name}/manifests/{reference}",stage="{{ $labels.stage }}",type="registry"}[5m])
          )
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_regional_sli_apdex:ratio_1h{component="server",monitor="global",type="registry"}
          < (1 - 14.4 * 0.003000)
        )
        and
        (
          gitlab_regional_sli_apdex:ratio_5m{component="server",monitor="global",type="registry"}
          < (1 - 14.4 * 0.003000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_1h{component="server",monitor="global",type="registry"}) >= 1
      )
  - alert: RegistryServiceServerApdexSLOViolationRegional
    for: 2m
    annotations:
      title: The server SLI of the registry service in region `{{ $labels.region }}`
        has an apdex violating SLO
      description: |
        Aggregation of all registry requests.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2863319079"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,region,le) (
            rate(registry_http_request_duration_seconds_bucket{environment="{{ $labels.environment }}",region="{{ $labels.region }}",route!~"/v2/{name}/manifests/{reference}",stage="{{ $labels.stage }}",type="registry"}[5m])
          )
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_regional_sli_apdex:ratio_6h{component="server",monitor="global",type="registry"}
          < (1 - 6 * 0.003000)
        )
        and
        (
          gitlab_regional_sli_apdex:ratio_30m{component="server",monitor="global",type="registry"}
          < (1 - 6 * 0.003000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_6h{component="server",monitor="global",type="registry"}) >= 0.16667
      )
  - alert: RegistryServiceServerErrorSLOViolation
    for: 2m
    annotations:
      title: The server SLI of the registry service (`{{ $labels.stage }}` stage)
        has an error rate violating SLO
      description: |
        Aggregation of all registry requests.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1631973137"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(registry_http_requests_total{code=~"5..",environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type="registry"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="server",monitor="global",type="registry"}
          > (14.4 * 0.000100)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="server",monitor="global",type="registry"}
          > (14.4 * 0.000100)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="server",monitor="global",type="registry"}) >= 1
      )
  - alert: RegistryServiceServerErrorSLOViolation
    for: 2m
    annotations:
      title: The server SLI of the registry service (`{{ $labels.stage }}` stage)
        has an error rate violating SLO
      description: |
        Aggregation of all registry requests.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1631973137"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(registry_http_requests_total{code=~"5..",environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type="registry"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="server",monitor="global",type="registry"}
          > (6 * 0.000100)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="server",monitor="global",type="registry"}
          > (6 * 0.000100)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="server",monitor="global",type="registry"}) >= 0.16667
      )
  - alert: RegistryServiceServerErrorSLOViolationRegional
    for: 2m
    annotations:
      title: The server SLI of the registry service in region `{{ $labels.region }}`
        has an error rate violating SLO
      description: |
        Aggregation of all registry requests.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1631973137"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(registry_http_requests_total{code=~"5..",environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="registry"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_regional_sli_errors:ratio_1h{component="server",monitor="global",type="registry"}
          > (14.4 * 0.000100)
        )
        and
        (
          gitlab_regional_sli_errors:ratio_5m{component="server",monitor="global",type="registry"}
          > (14.4 * 0.000100)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_1h{component="server",monitor="global",type="registry"}) >= 1
      )
  - alert: RegistryServiceServerErrorSLOViolationRegional
    for: 2m
    annotations:
      title: The server SLI of the registry service in region `{{ $labels.region }}`
        has an error rate violating SLO
      description: |
        Aggregation of all registry requests.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1631973137"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(registry_http_requests_total{code=~"5..",environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="registry"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_regional_sli_errors:ratio_6h{component="server",monitor="global",type="registry"}
          > (6 * 0.000100)
        )
        and
        (
          gitlab_regional_sli_errors:ratio_30m{component="server",monitor="global",type="registry"}
          > (6 * 0.000100)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_6h{component="server",monitor="global",type="registry"}) >= 0.16667
      )
  - alert: RegistryServiceServerTrafficCessation
    for: 5m
    annotations:
      title: The server SLI of the registry service (`{{ $labels.stage }}` stage)
        has not received any traffic in the past 30m
      description: |
        Aggregation of all registry requests.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2414183688"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(registry_http_requests_total{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type="registry"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="server",monitor="global",stage="main",type="registry"} == 0
      and
      gitlab_component_ops:rate_30m{component="server",monitor="global",stage="main",type="registry"} offset 1h >= 0.16666666666666666
  - alert: RegistryServiceServerTrafficAbsent
    for: 30m
    annotations:
      title: The server SLI of the registry service (`{{ $labels.stage }}` stage)
        has not reported any traffic in the past 30m
      description: |
        Aggregation of all registry requests.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2414183688"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(registry_http_requests_total{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type="registry"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="server",monitor="global",stage="main",type="registry"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="server",monitor="global",stage="main",type="registry"}
  - alert: RegistryServiceServerTrafficCessationRegional
    for: 5m
    annotations:
      title: The server SLI of the registry service in region `{{ $labels.region }}`
        has not received any traffic in the past 30m
      description: |
        Aggregation of all registry requests.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2414183688"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(registry_http_requests_total{environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="registry"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_30m{component="server",monitor="global",stage="main",type="registry"} == 0
      and
      gitlab_regional_sli_ops:rate_30m{component="server",monitor="global",stage="main",type="registry"} offset 1h >= 0.16666666666666666
  - alert: RegistryServiceServerTrafficAbsentRegional
    for: 30m
    annotations:
      title: The server SLI of the registry service in region `{{ $labels.region }}`
        has not reported any traffic in the past 30m
      description: |
        Aggregation of all registry requests.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2414183688"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(registry_http_requests_total{environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="registry"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_5m{component="server",monitor="global",stage="main",type="registry"} offset 1h
      unless
      gitlab_regional_sli_ops:rate_5m{component="server",monitor="global",stage="main",type="registry"}
  - alert: RegistryServiceServerRouteManifestReadsApdexSLOViolation
    for: 2m
    annotations:
      title: The server_route_manifest_reads SLI of the registry service (`{{ $labels.stage
        }}` stage) has an apdex violating SLO
      description: |
        All read-requests (HEAD or GET) for the manifest endpoints on the registry. Fetch the manifest identified by name and reference where reference can be a tag or digest. A HEAD request can also be issued to this endpoint to obtain resource information without receiving all data.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2850495079"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(registry_http_request_duration_seconds_bucket{environment="{{ $labels.environment }}",method=~"get|head",route="/v2/{name}/manifests/{reference}",stage="{{ $labels.stage }}",type="registry"}[5m])
          )
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="server_route_manifest_reads",monitor="global",type="registry"}
          < (1 - 14.4 * 0.003000)
        )
        and
        (
          gitlab_component_apdex:ratio_5m{component="server_route_manifest_reads",monitor="global",type="registry"}
          < (1 - 14.4 * 0.003000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="server_route_manifest_reads",monitor="global",type="registry"}) >= 1
      )
  - alert: RegistryServiceServerRouteManifestReadsApdexSLOViolation
    for: 2m
    annotations:
      title: The server_route_manifest_reads SLI of the registry service (`{{ $labels.stage
        }}` stage) has an apdex violating SLO
      description: |
        All read-requests (HEAD or GET) for the manifest endpoints on the registry. Fetch the manifest identified by name and reference where reference can be a tag or digest. A HEAD request can also be issued to this endpoint to obtain resource information without receiving all data.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2850495079"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(registry_http_request_duration_seconds_bucket{environment="{{ $labels.environment }}",method=~"get|head",route="/v2/{name}/manifests/{reference}",stage="{{ $labels.stage }}",type="registry"}[5m])
          )
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_6h{component="server_route_manifest_reads",monitor="global",type="registry"}
          < (1 - 6 * 0.003000)
        )
        and
        (
          gitlab_component_apdex:ratio_30m{component="server_route_manifest_reads",monitor="global",type="registry"}
          < (1 - 6 * 0.003000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="server_route_manifest_reads",monitor="global",type="registry"}) >= 0.16667
      )
  - alert: RegistryServiceServerRouteManifestReadsApdexSLOViolationRegional
    for: 2m
    annotations:
      title: The server_route_manifest_reads SLI of the registry service in region
        `{{ $labels.region }}` has an apdex violating SLO
      description: |
        All read-requests (HEAD or GET) for the manifest endpoints on the registry. Fetch the manifest identified by name and reference where reference can be a tag or digest. A HEAD request can also be issued to this endpoint to obtain resource information without receiving all data.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2850495079"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,region,le) (
            rate(registry_http_request_duration_seconds_bucket{environment="{{ $labels.environment }}",method=~"get|head",region="{{ $labels.region }}",route="/v2/{name}/manifests/{reference}",stage="{{ $labels.stage }}",type="registry"}[5m])
          )
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_regional_sli_apdex:ratio_1h{component="server_route_manifest_reads",monitor="global",type="registry"}
          < (1 - 14.4 * 0.003000)
        )
        and
        (
          gitlab_regional_sli_apdex:ratio_5m{component="server_route_manifest_reads",monitor="global",type="registry"}
          < (1 - 14.4 * 0.003000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_1h{component="server_route_manifest_reads",monitor="global",type="registry"}) >= 1
      )
  - alert: RegistryServiceServerRouteManifestReadsApdexSLOViolationRegional
    for: 2m
    annotations:
      title: The server_route_manifest_reads SLI of the registry service in region
        `{{ $labels.region }}` has an apdex violating SLO
      description: |
        All read-requests (HEAD or GET) for the manifest endpoints on the registry. Fetch the manifest identified by name and reference where reference can be a tag or digest. A HEAD request can also be issued to this endpoint to obtain resource information without receiving all data.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2850495079"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,region,le) (
            rate(registry_http_request_duration_seconds_bucket{environment="{{ $labels.environment }}",method=~"get|head",region="{{ $labels.region }}",route="/v2/{name}/manifests/{reference}",stage="{{ $labels.stage }}",type="registry"}[5m])
          )
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_regional_sli_apdex:ratio_6h{component="server_route_manifest_reads",monitor="global",type="registry"}
          < (1 - 6 * 0.003000)
        )
        and
        (
          gitlab_regional_sli_apdex:ratio_30m{component="server_route_manifest_reads",monitor="global",type="registry"}
          < (1 - 6 * 0.003000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_6h{component="server_route_manifest_reads",monitor="global",type="registry"}) >= 0.16667
      )
  - alert: RegistryServiceServerRouteManifestReadsTrafficCessation
    for: 5m
    annotations:
      title: The server_route_manifest_reads SLI of the registry service (`{{ $labels.stage
        }}` stage) has not received any traffic in the past 30m
      description: |
        All read-requests (HEAD or GET) for the manifest endpoints on the registry. Fetch the manifest identified by name and reference where reference can be a tag or digest. A HEAD request can also be issued to this endpoint to obtain resource information without receiving all data.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3999566506"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(registry_http_request_duration_seconds_count{environment="{{ $labels.environment }}",method=~"get|head",route="/v2/{name}/manifests/{reference}",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="server_route_manifest_reads",monitor="global",stage="main",type="registry"} == 0
      and
      gitlab_component_ops:rate_30m{component="server_route_manifest_reads",monitor="global",stage="main",type="registry"} offset 1h >= 0.16666666666666666
  - alert: RegistryServiceServerRouteManifestReadsTrafficAbsent
    for: 30m
    annotations:
      title: The server_route_manifest_reads SLI of the registry service (`{{ $labels.stage
        }}` stage) has not reported any traffic in the past 30m
      description: |
        All read-requests (HEAD or GET) for the manifest endpoints on the registry. Fetch the manifest identified by name and reference where reference can be a tag or digest. A HEAD request can also be issued to this endpoint to obtain resource information without receiving all data.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3999566506"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(registry_http_request_duration_seconds_count{environment="{{ $labels.environment }}",method=~"get|head",route="/v2/{name}/manifests/{reference}",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="server_route_manifest_reads",monitor="global",stage="main",type="registry"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="server_route_manifest_reads",monitor="global",stage="main",type="registry"}
  - alert: RegistryServiceServerRouteManifestReadsTrafficCessationRegional
    for: 5m
    annotations:
      title: The server_route_manifest_reads SLI of the registry service in region
        `{{ $labels.region }}` has not received any traffic in the past 30m
      description: |
        All read-requests (HEAD or GET) for the manifest endpoints on the registry. Fetch the manifest identified by name and reference where reference can be a tag or digest. A HEAD request can also be issued to this endpoint to obtain resource information without receiving all data.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3999566506"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(registry_http_request_duration_seconds_count{environment="{{ $labels.environment }}",method=~"get|head",region="{{ $labels.region }}",route="/v2/{name}/manifests/{reference}",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_30m{component="server_route_manifest_reads",monitor="global",stage="main",type="registry"} == 0
      and
      gitlab_regional_sli_ops:rate_30m{component="server_route_manifest_reads",monitor="global",stage="main",type="registry"} offset 1h >= 0.16666666666666666
  - alert: RegistryServiceServerRouteManifestReadsTrafficAbsentRegional
    for: 30m
    annotations:
      title: The server_route_manifest_reads SLI of the registry service in region
        `{{ $labels.region }}` has not reported any traffic in the past 30m
      description: |
        All read-requests (HEAD or GET) for the manifest endpoints on the registry. Fetch the manifest identified by name and reference where reference can be a tag or digest. A HEAD request can also be issued to this endpoint to obtain resource information without receiving all data.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3999566506"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(registry_http_request_duration_seconds_count{environment="{{ $labels.environment }}",method=~"get|head",region="{{ $labels.region }}",route="/v2/{name}/manifests/{reference}",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_5m{component="server_route_manifest_reads",monitor="global",stage="main",type="registry"} offset 1h
      unless
      gitlab_regional_sli_ops:rate_5m{component="server_route_manifest_reads",monitor="global",stage="main",type="registry"}
  - alert: RegistryServiceServerRouteManifestWritesApdexSLOViolation
    for: 2m
    annotations:
      title: The server_route_manifest_writes SLI of the registry service (`{{ $labels.stage
        }}` stage) has an apdex violating SLO
      description: |
        All write-requests (put, delete) for the manifest endpoints on the registry.

        Put the manifest identified by name and reference where reference can be a tag or digest.

        Delete the manifest identified by name and reference. Note that a manifest can only be deleted by digest.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1201783796"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(registry_http_request_duration_seconds_bucket{environment="{{ $labels.environment }}",method=~"put|delete|post|patch",route="/v2/{name}/manifests/{reference}",stage="{{ $labels.stage }}",type="registry"}[5m])
          )
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="server_route_manifest_writes",monitor="global",type="registry"}
          < (1 - 14.4 * 0.003000)
        )
        and
        (
          gitlab_component_apdex:ratio_5m{component="server_route_manifest_writes",monitor="global",type="registry"}
          < (1 - 14.4 * 0.003000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="server_route_manifest_writes",monitor="global",type="registry"}) >= 1
      )
  - alert: RegistryServiceServerRouteManifestWritesApdexSLOViolation
    for: 2m
    annotations:
      title: The server_route_manifest_writes SLI of the registry service (`{{ $labels.stage
        }}` stage) has an apdex violating SLO
      description: |
        All write-requests (put, delete) for the manifest endpoints on the registry.

        Put the manifest identified by name and reference where reference can be a tag or digest.

        Delete the manifest identified by name and reference. Note that a manifest can only be deleted by digest.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1201783796"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(registry_http_request_duration_seconds_bucket{environment="{{ $labels.environment }}",method=~"put|delete|post|patch",route="/v2/{name}/manifests/{reference}",stage="{{ $labels.stage }}",type="registry"}[5m])
          )
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_6h{component="server_route_manifest_writes",monitor="global",type="registry"}
          < (1 - 6 * 0.003000)
        )
        and
        (
          gitlab_component_apdex:ratio_30m{component="server_route_manifest_writes",monitor="global",type="registry"}
          < (1 - 6 * 0.003000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="server_route_manifest_writes",monitor="global",type="registry"}) >= 0.16667
      )
  - alert: RegistryServiceServerRouteManifestWritesApdexSLOViolationRegional
    for: 2m
    annotations:
      title: The server_route_manifest_writes SLI of the registry service in region
        `{{ $labels.region }}` has an apdex violating SLO
      description: |
        All write-requests (put, delete) for the manifest endpoints on the registry.

        Put the manifest identified by name and reference where reference can be a tag or digest.

        Delete the manifest identified by name and reference. Note that a manifest can only be deleted by digest.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1201783796"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,region,le) (
            rate(registry_http_request_duration_seconds_bucket{environment="{{ $labels.environment }}",method=~"put|delete|post|patch",region="{{ $labels.region }}",route="/v2/{name}/manifests/{reference}",stage="{{ $labels.stage }}",type="registry"}[5m])
          )
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_regional_sli_apdex:ratio_1h{component="server_route_manifest_writes",monitor="global",type="registry"}
          < (1 - 14.4 * 0.003000)
        )
        and
        (
          gitlab_regional_sli_apdex:ratio_5m{component="server_route_manifest_writes",monitor="global",type="registry"}
          < (1 - 14.4 * 0.003000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_1h{component="server_route_manifest_writes",monitor="global",type="registry"}) >= 1
      )
  - alert: RegistryServiceServerRouteManifestWritesApdexSLOViolationRegional
    for: 2m
    annotations:
      title: The server_route_manifest_writes SLI of the registry service in region
        `{{ $labels.region }}` has an apdex violating SLO
      description: |
        All write-requests (put, delete) for the manifest endpoints on the registry.

        Put the manifest identified by name and reference where reference can be a tag or digest.

        Delete the manifest identified by name and reference. Note that a manifest can only be deleted by digest.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1201783796"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,region,le) (
            rate(registry_http_request_duration_seconds_bucket{environment="{{ $labels.environment }}",method=~"put|delete|post|patch",region="{{ $labels.region }}",route="/v2/{name}/manifests/{reference}",stage="{{ $labels.stage }}",type="registry"}[5m])
          )
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_regional_sli_apdex:ratio_6h{component="server_route_manifest_writes",monitor="global",type="registry"}
          < (1 - 6 * 0.003000)
        )
        and
        (
          gitlab_regional_sli_apdex:ratio_30m{component="server_route_manifest_writes",monitor="global",type="registry"}
          < (1 - 6 * 0.003000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_6h{component="server_route_manifest_writes",monitor="global",type="registry"}) >= 0.16667
      )
  - alert: RegistryServiceServerRouteManifestWritesTrafficCessation
    for: 5m
    annotations:
      title: The server_route_manifest_writes SLI of the registry service (`{{ $labels.stage
        }}` stage) has not received any traffic in the past 30m
      description: |
        All write-requests (put, delete) for the manifest endpoints on the registry.

        Put the manifest identified by name and reference where reference can be a tag or digest.

        Delete the manifest identified by name and reference. Note that a manifest can only be deleted by digest.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1199706222"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(registry_http_request_duration_seconds_count{environment="{{ $labels.environment }}",method=~"put|delete|post|patch",route="/v2/{name}/manifests/{reference}",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="server_route_manifest_writes",monitor="global",stage="main",type="registry"} == 0
      and
      gitlab_component_ops:rate_30m{component="server_route_manifest_writes",monitor="global",stage="main",type="registry"} offset 1h >= 0.16666666666666666
  - alert: RegistryServiceServerRouteManifestWritesTrafficAbsent
    for: 30m
    annotations:
      title: The server_route_manifest_writes SLI of the registry service (`{{ $labels.stage
        }}` stage) has not reported any traffic in the past 30m
      description: |
        All write-requests (put, delete) for the manifest endpoints on the registry.

        Put the manifest identified by name and reference where reference can be a tag or digest.

        Delete the manifest identified by name and reference. Note that a manifest can only be deleted by digest.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1199706222"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(registry_http_request_duration_seconds_count{environment="{{ $labels.environment }}",method=~"put|delete|post|patch",route="/v2/{name}/manifests/{reference}",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="server_route_manifest_writes",monitor="global",stage="main",type="registry"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="server_route_manifest_writes",monitor="global",stage="main",type="registry"}
  - alert: RegistryServiceServerRouteManifestWritesTrafficCessationRegional
    for: 5m
    annotations:
      title: The server_route_manifest_writes SLI of the registry service in region
        `{{ $labels.region }}` has not received any traffic in the past 30m
      description: |
        All write-requests (put, delete) for the manifest endpoints on the registry.

        Put the manifest identified by name and reference where reference can be a tag or digest.

        Delete the manifest identified by name and reference. Note that a manifest can only be deleted by digest.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1199706222"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(registry_http_request_duration_seconds_count{environment="{{ $labels.environment }}",method=~"put|delete|post|patch",region="{{ $labels.region }}",route="/v2/{name}/manifests/{reference}",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_30m{component="server_route_manifest_writes",monitor="global",stage="main",type="registry"} == 0
      and
      gitlab_regional_sli_ops:rate_30m{component="server_route_manifest_writes",monitor="global",stage="main",type="registry"} offset 1h >= 0.16666666666666666
  - alert: RegistryServiceServerRouteManifestWritesTrafficAbsentRegional
    for: 30m
    annotations:
      title: The server_route_manifest_writes SLI of the registry service in region
        `{{ $labels.region }}` has not reported any traffic in the past 30m
      description: |
        All write-requests (put, delete) for the manifest endpoints on the registry.

        Put the manifest identified by name and reference where reference can be a tag or digest.

        Delete the manifest identified by name and reference. Note that a manifest can only be deleted by digest.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: registry-main/registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/registry-main/registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1199706222"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(registry_http_request_duration_seconds_count{environment="{{ $labels.environment }}",method=~"put|delete|post|patch",region="{{ $labels.region }}",route="/v2/{name}/manifests/{reference}",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/registry/README.md
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: container_registry
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_5m{component="server_route_manifest_writes",monitor="global",stage="main",type="registry"} offset 1h
      unless
      gitlab_regional_sli_ops:rate_5m{component="server_route_manifest_writes",monitor="global",stage="main",type="registry"}
