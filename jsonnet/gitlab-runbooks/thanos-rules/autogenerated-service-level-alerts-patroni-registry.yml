# WARNING. DO NOT EDIT THIS FILE BY HAND. USE ./thanos-rules-jsonnet/service-component-alerts.jsonnet TO GENERATE IT
# YOUR CHANGES WILL BE OVERRIDDEN
groups:
- name: 'Service Component Alerts: patroni-registry'
  interval: 1m
  partial_response_strategy: warn
  rules:
  - alert: PatroniRegistryServicePgbouncerErrorSLOViolation
    for: 2m
    annotations:
      title: The pgbouncer SLI of the patroni-registry service (`{{ $labels.stage
        }}` stage) has an error rate violating SLO
      description: |
        All transactions destined for the Postgres secondary instances are routed through the pgbouncer instances running on the patroni nodes themselves. This SLI models those transactions in aggregate.

        Error rate uses mtail metrics from pgbouncer logs.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: patroni-registry-main/patroni-registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-registry-main/patroni-registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3935075118"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(pgbouncer_pooler_errors_total{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-registry"}[5m])
        )
      runbook: docs/patroni-registry/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="pgbouncer",monitor="global",type="patroni-registry"}
          > (14.4 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="pgbouncer",monitor="global",type="patroni-registry"}
          > (14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="pgbouncer",monitor="global",type="patroni-registry"}) >= 1
      )
  - alert: PatroniRegistryServicePgbouncerErrorSLOViolation
    for: 2m
    annotations:
      title: The pgbouncer SLI of the patroni-registry service (`{{ $labels.stage
        }}` stage) has an error rate violating SLO
      description: |
        All transactions destined for the Postgres secondary instances are routed through the pgbouncer instances running on the patroni nodes themselves. This SLI models those transactions in aggregate.

        Error rate uses mtail metrics from pgbouncer logs.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: patroni-registry-main/patroni-registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-registry-main/patroni-registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3935075118"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(pgbouncer_pooler_errors_total{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-registry"}[5m])
        )
      runbook: docs/patroni-registry/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="pgbouncer",monitor="global",type="patroni-registry"}
          > (6 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="pgbouncer",monitor="global",type="patroni-registry"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="pgbouncer",monitor="global",type="patroni-registry"}) >= 0.16667
      )
  - alert: PatroniRegistryServicePgbouncerTrafficCessation
    for: 5m
    annotations:
      title: The pgbouncer SLI of the patroni-registry service (`{{ $labels.stage
        }}` stage) has not received any traffic in the past 30m
      description: |
        All transactions destined for the Postgres secondary instances are routed through the pgbouncer instances running on the patroni nodes themselves. This SLI models those transactions in aggregate.

        Error rate uses mtail metrics from pgbouncer logs.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: patroni-registry-main/patroni-registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-registry-main/patroni-registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2579921767"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          label_replace(rate(pgbouncer_stats_sql_transactions_pooled_total{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-registry"}[5m]), "_c", "0", "", "")
          or
          label_replace(rate(pgbouncer_stats_queries_pooled_total{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-registry"}[5m]), "_c", "1", "", "")
        )
      runbook: docs/patroni-registry/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="pgbouncer",monitor="global",stage="main",type="patroni-registry"} == 0
      and
      gitlab_component_ops:rate_30m{component="pgbouncer",monitor="global",stage="main",type="patroni-registry"} offset 1h >= 0.16666666666666666
  - alert: PatroniRegistryServicePgbouncerTrafficAbsent
    for: 30m
    annotations:
      title: The pgbouncer SLI of the patroni-registry service (`{{ $labels.stage
        }}` stage) has not reported any traffic in the past 30m
      description: |
        All transactions destined for the Postgres secondary instances are routed through the pgbouncer instances running on the patroni nodes themselves. This SLI models those transactions in aggregate.

        Error rate uses mtail metrics from pgbouncer logs.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: patroni-registry-main/patroni-registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-registry-main/patroni-registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2579921767"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          label_replace(rate(pgbouncer_stats_sql_transactions_pooled_total{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-registry"}[5m]), "_c", "0", "", "")
          or
          label_replace(rate(pgbouncer_stats_queries_pooled_total{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-registry"}[5m]), "_c", "1", "", "")
        )
      runbook: docs/patroni-registry/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="pgbouncer",monitor="global",stage="main",type="patroni-registry"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="pgbouncer",monitor="global",stage="main",type="patroni-registry"}
  - alert: PatroniRegistryServiceTransactionsPrimaryErrorSLOViolation
    for: 2m
    annotations:
      title: The transactions_primary SLI of the patroni-registry service (`{{ $labels.stage
        }}` stage) has an error rate violating SLO
      description: |
        Represents all SQL transactions issued to the primary Postgres instance. Errors represent transaction rollbacks.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: patroni-registry-main/patroni-registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-registry-main/patroni-registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2278903563"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(pg_stat_database_xact_rollback{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-registry"}[5m]) and on (instance) (pg_replication_is_replica == 0)
        )
      runbook: docs/patroni-registry/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="transactions_primary",monitor="global",type="patroni-registry"}
          > (14.4 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="transactions_primary",monitor="global",type="patroni-registry"}
          > (14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="transactions_primary",monitor="global",type="patroni-registry"}) >= 1
      )
  - alert: PatroniRegistryServiceTransactionsPrimaryErrorSLOViolation
    for: 2m
    annotations:
      title: The transactions_primary SLI of the patroni-registry service (`{{ $labels.stage
        }}` stage) has an error rate violating SLO
      description: |
        Represents all SQL transactions issued to the primary Postgres instance. Errors represent transaction rollbacks.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: patroni-registry-main/patroni-registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-registry-main/patroni-registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2278903563"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(pg_stat_database_xact_rollback{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-registry"}[5m]) and on (instance) (pg_replication_is_replica == 0)
        )
      runbook: docs/patroni-registry/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="transactions_primary",monitor="global",type="patroni-registry"}
          > (6 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="transactions_primary",monitor="global",type="patroni-registry"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="transactions_primary",monitor="global",type="patroni-registry"}) >= 0.16667
      )
  - alert: PatroniRegistryServiceTransactionsPrimaryTrafficCessation
    for: 5m
    annotations:
      title: The transactions_primary SLI of the patroni-registry service (`{{ $labels.stage
        }}` stage) has not received any traffic in the past 30m
      description: |
        Represents all SQL transactions issued to the primary Postgres instance. Errors represent transaction rollbacks.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: patroni-registry-main/patroni-registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-registry-main/patroni-registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3407402624"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          label_replace(rate(pg_stat_database_xact_commit{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-registry"}[5m]) and on (instance) (pg_replication_is_replica == 0), "_c", "0", "", "")
          or
          label_replace(rate(pg_stat_database_xact_rollback{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-registry"}[5m]) and on (instance) (pg_replication_is_replica == 0), "_c", "1", "", "")
        )
      runbook: docs/patroni-registry/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="transactions_primary",monitor="global",stage="main",type="patroni-registry"} == 0
      and
      gitlab_component_ops:rate_30m{component="transactions_primary",monitor="global",stage="main",type="patroni-registry"} offset 1h >= 0.16666666666666666
  - alert: PatroniRegistryServiceTransactionsPrimaryTrafficAbsent
    for: 30m
    annotations:
      title: The transactions_primary SLI of the patroni-registry service (`{{ $labels.stage
        }}` stage) has not reported any traffic in the past 30m
      description: |
        Represents all SQL transactions issued to the primary Postgres instance. Errors represent transaction rollbacks.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: patroni-registry-main/patroni-registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-registry-main/patroni-registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3407402624"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          label_replace(rate(pg_stat_database_xact_commit{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-registry"}[5m]) and on (instance) (pg_replication_is_replica == 0), "_c", "0", "", "")
          or
          label_replace(rate(pg_stat_database_xact_rollback{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-registry"}[5m]) and on (instance) (pg_replication_is_replica == 0), "_c", "1", "", "")
        )
      runbook: docs/patroni-registry/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="transactions_primary",monitor="global",stage="main",type="patroni-registry"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="transactions_primary",monitor="global",stage="main",type="patroni-registry"}
  - alert: PatroniRegistryServiceTransactionsReplicaErrorSLOViolation
    for: 2m
    annotations:
      title: The transactions_replica SLI of the patroni-registry service (`{{ $labels.stage
        }}` stage) has an error rate violating SLO
      description: |
        Represents all SQL transactions issued to replica Postgres instances, in aggregate. Errors represent transaction rollbacks.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: patroni-registry-main/patroni-registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-registry-main/patroni-registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "438786388"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(pg_stat_database_xact_rollback{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-registry"}[5m]) and on (instance) (pg_replication_is_replica == 1)
        )
      runbook: docs/patroni-registry/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="transactions_replica",monitor="global",type="patroni-registry"}
          > (14.4 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="transactions_replica",monitor="global",type="patroni-registry"}
          > (14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="transactions_replica",monitor="global",type="patroni-registry"}) >= 1
      )
  - alert: PatroniRegistryServiceTransactionsReplicaErrorSLOViolation
    for: 2m
    annotations:
      title: The transactions_replica SLI of the patroni-registry service (`{{ $labels.stage
        }}` stage) has an error rate violating SLO
      description: |
        Represents all SQL transactions issued to replica Postgres instances, in aggregate. Errors represent transaction rollbacks.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: patroni-registry-main/patroni-registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-registry-main/patroni-registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "438786388"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(pg_stat_database_xact_rollback{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-registry"}[5m]) and on (instance) (pg_replication_is_replica == 1)
        )
      runbook: docs/patroni-registry/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="transactions_replica",monitor="global",type="patroni-registry"}
          > (6 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="transactions_replica",monitor="global",type="patroni-registry"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="transactions_replica",monitor="global",type="patroni-registry"}) >= 0.16667
      )
  - alert: PatroniRegistryServiceTransactionsReplicaTrafficCessation
    for: 5m
    annotations:
      title: The transactions_replica SLI of the patroni-registry service (`{{ $labels.stage
        }}` stage) has not received any traffic in the past 30m
      description: |
        Represents all SQL transactions issued to replica Postgres instances, in aggregate. Errors represent transaction rollbacks.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: patroni-registry-main/patroni-registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-registry-main/patroni-registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1864411224"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          label_replace(rate(pg_stat_database_xact_commit{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-registry"}[5m]) and on (instance) (pg_replication_is_replica == 1), "_c", "0", "", "")
          or
          label_replace(rate(pg_stat_database_xact_rollback{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-registry"}[5m]) and on (instance) (pg_replication_is_replica == 1), "_c", "1", "", "")
        )
      runbook: docs/patroni-registry/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="transactions_replica",monitor="global",stage="main",type="patroni-registry"} == 0
      and
      gitlab_component_ops:rate_30m{component="transactions_replica",monitor="global",stage="main",type="patroni-registry"} offset 1h >= 0.16666666666666666
  - alert: PatroniRegistryServiceTransactionsReplicaTrafficAbsent
    for: 30m
    annotations:
      title: The transactions_replica SLI of the patroni-registry service (`{{ $labels.stage
        }}` stage) has not reported any traffic in the past 30m
      description: |
        Represents all SQL transactions issued to replica Postgres instances, in aggregate. Errors represent transaction rollbacks.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: patroni-registry-main/patroni-registry-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-registry-main/patroni-registry-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1864411224"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          label_replace(rate(pg_stat_database_xact_commit{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-registry"}[5m]) and on (instance) (pg_replication_is_replica == 1), "_c", "0", "", "")
          or
          label_replace(rate(pg_stat_database_xact_rollback{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-registry"}[5m]) and on (instance) (pg_replication_is_replica == 1), "_c", "1", "", "")
        )
      runbook: docs/patroni-registry/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="transactions_replica",monitor="global",stage="main",type="patroni-registry"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="transactions_replica",monitor="global",stage="main",type="patroni-registry"}
