# WARNING. DO NOT EDIT THIS FILE BY HAND. USE ./thanos-rules-jsonnet/service-component-alerts.jsonnet TO GENERATE IT
# YOUR CHANGES WILL BE OVERRIDDEN
groups:
- name: 'Service Component Alerts: camoproxy'
  interval: 1m
  partial_response_strategy: warn
  rules:
  - alert: CamoproxyServiceLoadbalancerErrorSLOViolation
    for: 2m
    annotations:
      title: The loadbalancer SLI of the camoproxy service (`{{ $labels.stage }}`
        stage) has an error rate violating SLO
      description: |
        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: camoproxy-main/camoproxy-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/camoproxy-main/camoproxy-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3255520955"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(stackdriver_https_lb_rule_loadbalancing_googleapis_com_https_request_count{environment="{{ $labels.environment }}",project_id="gitlab-production",response_code_class="500",stage="{{ $labels.stage }}",url_map_name="k8s2-um-8kvupfyn-camoproxy-camoproxy-6ygs428t"}[5m])
        )
      runbook: docs/camoproxy/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="loadbalancer",monitor="global",type="camoproxy"}
          > (14.4 * 0.200000)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="loadbalancer",monitor="global",type="camoproxy"}
          > (14.4 * 0.200000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="loadbalancer",monitor="global",type="camoproxy"}) >= 1
      )
  - alert: CamoproxyServiceLoadbalancerErrorSLOViolation
    for: 2m
    annotations:
      title: The loadbalancer SLI of the camoproxy service (`{{ $labels.stage }}`
        stage) has an error rate violating SLO
      description: |
        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: camoproxy-main/camoproxy-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/camoproxy-main/camoproxy-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3255520955"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(stackdriver_https_lb_rule_loadbalancing_googleapis_com_https_request_count{environment="{{ $labels.environment }}",project_id="gitlab-production",response_code_class="500",stage="{{ $labels.stage }}",url_map_name="k8s2-um-8kvupfyn-camoproxy-camoproxy-6ygs428t"}[5m])
        )
      runbook: docs/camoproxy/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="loadbalancer",monitor="global",type="camoproxy"}
          > (6 * 0.200000)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="loadbalancer",monitor="global",type="camoproxy"}
          > (6 * 0.200000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="loadbalancer",monitor="global",type="camoproxy"}) >= 0.16667
      )
  - alert: CamoproxyServiceLoadbalancerTrafficCessation
    for: 5m
    annotations:
      title: The loadbalancer SLI of the camoproxy service (`{{ $labels.stage }}`
        stage) has not received any traffic in the past 30m
      description: |
        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: camoproxy-main/camoproxy-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/camoproxy-main/camoproxy-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "138982496"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(stackdriver_https_lb_rule_loadbalancing_googleapis_com_https_request_count{environment="{{ $labels.environment }}",project_id="gitlab-production",stage="{{ $labels.stage }}",url_map_name="k8s2-um-8kvupfyn-camoproxy-camoproxy-6ygs428t"}[5m])
        )
      runbook: docs/camoproxy/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="loadbalancer",monitor="global",stage="main",type="camoproxy"} == 0
      and
      gitlab_component_ops:rate_30m{component="loadbalancer",monitor="global",stage="main",type="camoproxy"} offset 1h >= 0.16666666666666666
  - alert: CamoproxyServiceLoadbalancerTrafficAbsent
    for: 30m
    annotations:
      title: The loadbalancer SLI of the camoproxy service (`{{ $labels.stage }}`
        stage) has not reported any traffic in the past 30m
      description: |
        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: camoproxy-main/camoproxy-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/camoproxy-main/camoproxy-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "138982496"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(stackdriver_https_lb_rule_loadbalancing_googleapis_com_https_request_count{environment="{{ $labels.environment }}",project_id="gitlab-production",stage="{{ $labels.stage }}",url_map_name="k8s2-um-8kvupfyn-camoproxy-camoproxy-6ygs428t"}[5m])
        )
      runbook: docs/camoproxy/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="loadbalancer",monitor="global",stage="main",type="camoproxy"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="loadbalancer",monitor="global",stage="main",type="camoproxy"}
  - alert: CamoproxyServiceServerApdexSLOViolation
    for: 2m
    annotations:
      title: The server SLI of the camoproxy service (`{{ $labels.stage }}` stage)
        has an apdex violating SLO
      description: |
        This SLI monitors the camoproxy server via its HTTP interface. 5xx responses are considered to be failures. Note that this SLI is highly dependent on upstream proxy targets, not under the control of GitLab. We are unable to distinguish problems in the proxy from upstream problems. This should be taken into account for this SLI.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: camoproxy-main/camoproxy-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/camoproxy-main/camoproxy-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2863319079"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(camo_response_duration_seconds_bucket{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}"}[5m])
          )
        )
      runbook: docs/camoproxy/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="server",monitor="global",type="camoproxy"}
          < (1 - 14.4 * 0.001000)
        )
        and
        (
          gitlab_component_apdex:ratio_5m{component="server",monitor="global",type="camoproxy"}
          < (1 - 14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="server",monitor="global",type="camoproxy"}) >= 1
      )
  - alert: CamoproxyServiceServerApdexSLOViolation
    for: 2m
    annotations:
      title: The server SLI of the camoproxy service (`{{ $labels.stage }}` stage)
        has an apdex violating SLO
      description: |
        This SLI monitors the camoproxy server via its HTTP interface. 5xx responses are considered to be failures. Note that this SLI is highly dependent on upstream proxy targets, not under the control of GitLab. We are unable to distinguish problems in the proxy from upstream problems. This should be taken into account for this SLI.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: camoproxy-main/camoproxy-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/camoproxy-main/camoproxy-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2863319079"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(camo_response_duration_seconds_bucket{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}"}[5m])
          )
        )
      runbook: docs/camoproxy/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_6h{component="server",monitor="global",type="camoproxy"}
          < (1 - 6 * 0.001000)
        )
        and
        (
          gitlab_component_apdex:ratio_30m{component="server",monitor="global",type="camoproxy"}
          < (1 - 6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="server",monitor="global",type="camoproxy"}) >= 0.16667
      )
  - alert: CamoproxyServiceServerErrorSLOViolation
    for: 2m
    annotations:
      title: The server SLI of the camoproxy service (`{{ $labels.stage }}` stage)
        has an error rate violating SLO
      description: |
        This SLI monitors the camoproxy server via its HTTP interface. 5xx responses are considered to be failures. Note that this SLI is highly dependent on upstream proxy targets, not under the control of GitLab. We are unable to distinguish problems in the proxy from upstream problems. This should be taken into account for this SLI.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: camoproxy-main/camoproxy-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/camoproxy-main/camoproxy-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1631973137"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(camo_proxy_reponses_failed_total{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/camoproxy/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="server",monitor="global",type="camoproxy"}
          > (14.4 * 0.200000)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="server",monitor="global",type="camoproxy"}
          > (14.4 * 0.200000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="server",monitor="global",type="camoproxy"}) >= 1
      )
  - alert: CamoproxyServiceServerErrorSLOViolation
    for: 2m
    annotations:
      title: The server SLI of the camoproxy service (`{{ $labels.stage }}` stage)
        has an error rate violating SLO
      description: |
        This SLI monitors the camoproxy server via its HTTP interface. 5xx responses are considered to be failures. Note that this SLI is highly dependent on upstream proxy targets, not under the control of GitLab. We are unable to distinguish problems in the proxy from upstream problems. This should be taken into account for this SLI.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: camoproxy-main/camoproxy-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/camoproxy-main/camoproxy-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1631973137"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(camo_proxy_reponses_failed_total{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/camoproxy/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="server",monitor="global",type="camoproxy"}
          > (6 * 0.200000)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="server",monitor="global",type="camoproxy"}
          > (6 * 0.200000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="server",monitor="global",type="camoproxy"}) >= 0.16667
      )
  - alert: CamoproxyServiceServerTrafficCessation
    for: 5m
    annotations:
      title: The server SLI of the camoproxy service (`{{ $labels.stage }}` stage)
        has not received any traffic in the past 30m
      description: |
        This SLI monitors the camoproxy server via its HTTP interface. 5xx responses are considered to be failures. Note that this SLI is highly dependent on upstream proxy targets, not under the control of GitLab. We are unable to distinguish problems in the proxy from upstream problems. This should be taken into account for this SLI.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: camoproxy-main/camoproxy-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/camoproxy-main/camoproxy-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2414183688"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(camo_response_duration_seconds_bucket{environment="{{ $labels.environment }}",le="+Inf",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/camoproxy/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="server",monitor="global",stage="main",type="camoproxy"} == 0
      and
      gitlab_component_ops:rate_30m{component="server",monitor="global",stage="main",type="camoproxy"} offset 1h >= 0.16666666666666666
  - alert: CamoproxyServiceServerTrafficAbsent
    for: 30m
    annotations:
      title: The server SLI of the camoproxy service (`{{ $labels.stage }}` stage)
        has not reported any traffic in the past 30m
      description: |
        This SLI monitors the camoproxy server via its HTTP interface. 5xx responses are considered to be failures. Note that this SLI is highly dependent on upstream proxy targets, not under the control of GitLab. We are unable to distinguish problems in the proxy from upstream problems. This should be taken into account for this SLI.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: camoproxy-main/camoproxy-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/camoproxy-main/camoproxy-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2414183688"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(camo_response_duration_seconds_bucket{environment="{{ $labels.environment }}",le="+Inf",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/camoproxy/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="server",monitor="global",stage="main",type="camoproxy"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="server",monitor="global",stage="main",type="camoproxy"}
