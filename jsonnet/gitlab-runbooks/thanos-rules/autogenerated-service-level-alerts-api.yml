# WARNING. DO NOT EDIT THIS FILE BY HAND. USE ./thanos-rules-jsonnet/service-component-alerts.jsonnet TO GENERATE IT
# YOUR CHANGES WILL BE OVERRIDDEN
groups:
- name: 'Service Component Alerts: api'
  interval: 1m
  partial_response_strategy: warn
  rules:
  - alert: ApiServiceGlobalSearchApdexSLOViolation
    for: 2m
    annotations:
      title: The global_search SLI of the api service (`{{ $labels.stage }}` stage)
        has an apdex violating SLO
      description: |
        The number of Global Search search requests meeting their duration target based on the 99.95th percentile of the search with the same parameters.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "4181740019"
      grafana_variables: environment,stage
      runbook: docs/api/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: global_search
      rules_domain: general
      severity: s3
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="global_search",monitor="global",type="api"}
          < (1 - 14.4 * 0.005000)
        )
        and
        (
          gitlab_component_apdex:ratio_5m{component="global_search",monitor="global",type="api"}
          < (1 - 14.4 * 0.005000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="global_search",monitor="global",type="api"}) >= 1
      )
  - alert: ApiServiceGlobalSearchApdexSLOViolation
    for: 2m
    annotations:
      title: The global_search SLI of the api service (`{{ $labels.stage }}` stage)
        has an apdex violating SLO
      description: |
        The number of Global Search search requests meeting their duration target based on the 99.95th percentile of the search with the same parameters.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "4181740019"
      grafana_variables: environment,stage
      runbook: docs/api/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: global_search
      rules_domain: general
      severity: s3
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_6h{component="global_search",monitor="global",type="api"}
          < (1 - 6 * 0.005000)
        )
        and
        (
          gitlab_component_apdex:ratio_30m{component="global_search",monitor="global",type="api"}
          < (1 - 6 * 0.005000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="global_search",monitor="global",type="api"}) >= 0.16667
      )
  - alert: ApiServiceGlobalSearchApdexSLOViolationRegional
    for: 2m
    annotations:
      title: The global_search SLI of the api service in region `{{ $labels.region
        }}` has an apdex violating SLO
      description: |
        The number of Global Search search requests meeting their duration target based on the 99.95th percentile of the search with the same parameters.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "4181740019"
      grafana_variables: environment,stage
      runbook: docs/api/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: global_search
      rules_domain: general
      severity: s3
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_regional_sli_apdex:ratio_1h{component="global_search",monitor="global",type="api"}
          < (1 - 14.4 * 0.005000)
        )
        and
        (
          gitlab_regional_sli_apdex:ratio_5m{component="global_search",monitor="global",type="api"}
          < (1 - 14.4 * 0.005000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_1h{component="global_search",monitor="global",type="api"}) >= 1
      )
  - alert: ApiServiceGlobalSearchApdexSLOViolationRegional
    for: 2m
    annotations:
      title: The global_search SLI of the api service in region `{{ $labels.region
        }}` has an apdex violating SLO
      description: |
        The number of Global Search search requests meeting their duration target based on the 99.95th percentile of the search with the same parameters.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "4181740019"
      grafana_variables: environment,stage
      runbook: docs/api/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: global_search
      rules_domain: general
      severity: s3
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_regional_sli_apdex:ratio_6h{component="global_search",monitor="global",type="api"}
          < (1 - 6 * 0.005000)
        )
        and
        (
          gitlab_regional_sli_apdex:ratio_30m{component="global_search",monitor="global",type="api"}
          < (1 - 6 * 0.005000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_6h{component="global_search",monitor="global",type="api"}) >= 0.16667
      )
  - alert: ApiServiceGlobalSearchTrafficCessation
    for: 5m
    annotations:
      title: The global_search SLI of the api service (`{{ $labels.stage }}` stage)
        has not received any traffic in the past 30m
      description: |
        The number of Global Search search requests meeting their duration target based on the 99.95th percentile of the search with the same parameters.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3070581511"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_sli_global_search_apdex_total{environment="{{ $labels.environment }}",job="gitlab-rails",stage="{{ $labels.stage }}",type="api"}[5m])
        )
      runbook: docs/api/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: global_search
      rules_domain: general
      severity: s3
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="global_search",monitor="global",stage="main",type="api"} == 0
      and
      gitlab_component_ops:rate_30m{component="global_search",monitor="global",stage="main",type="api"} offset 1h >= 0.16666666666666666
  - alert: ApiServiceGlobalSearchTrafficAbsent
    for: 30m
    annotations:
      title: The global_search SLI of the api service (`{{ $labels.stage }}` stage)
        has not reported any traffic in the past 30m
      description: |
        The number of Global Search search requests meeting their duration target based on the 99.95th percentile of the search with the same parameters.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3070581511"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_sli_global_search_apdex_total{environment="{{ $labels.environment }}",job="gitlab-rails",stage="{{ $labels.stage }}",type="api"}[5m])
        )
      runbook: docs/api/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: global_search
      rules_domain: general
      severity: s3
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="global_search",monitor="global",stage="main",type="api"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="global_search",monitor="global",stage="main",type="api"}
  - alert: ApiServiceGlobalSearchTrafficCessationRegional
    for: 5m
    annotations:
      title: The global_search SLI of the api service in region `{{ $labels.region
        }}` has not received any traffic in the past 30m
      description: |
        The number of Global Search search requests meeting their duration target based on the 99.95th percentile of the search with the same parameters.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3070581511"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(gitlab_sli_global_search_apdex_total{environment="{{ $labels.environment }}",job="gitlab-rails",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="api"}[5m])
        )
      runbook: docs/api/README.md
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: global_search
      rules_domain: general
      severity: s3
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_30m{component="global_search",monitor="global",stage="main",type="api"} == 0
      and
      gitlab_regional_sli_ops:rate_30m{component="global_search",monitor="global",stage="main",type="api"} offset 1h >= 0.16666666666666666
  - alert: ApiServiceGlobalSearchTrafficAbsentRegional
    for: 30m
    annotations:
      title: The global_search SLI of the api service in region `{{ $labels.region
        }}` has not reported any traffic in the past 30m
      description: |
        The number of Global Search search requests meeting their duration target based on the 99.95th percentile of the search with the same parameters.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3070581511"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(gitlab_sli_global_search_apdex_total{environment="{{ $labels.environment }}",job="gitlab-rails",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="api"}[5m])
        )
      runbook: docs/api/README.md
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: global_search
      rules_domain: general
      severity: s3
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_5m{component="global_search",monitor="global",stage="main",type="api"} offset 1h
      unless
      gitlab_regional_sli_ops:rate_5m{component="global_search",monitor="global",stage="main",type="api"}
  - alert: ApiServiceGraphqlQueriesApdexSLOViolation
    for: 2m
    annotations:
      title: The graphql_queries SLI of the api service (`{{ $labels.stage }}` stage)
        has an apdex violating SLO
      description: |
        The number of GraphQL queries meeting their duration target based on the urgency of the endpoint. By default, a query should take no more than 1s. We're working on making the urgency customizable in [this epic](https://gitlab.com/groups/gitlab-org/-/epics/5841).

        Mutliple queries could be batched inside a single request.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2613733144"
      grafana_variables: environment,stage
      runbook: docs/api/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="graphql_queries",monitor="global",type="api"}
          < (1 - 14.4 * 0.005000)
        )
        and
        (
          gitlab_component_apdex:ratio_5m{component="graphql_queries",monitor="global",type="api"}
          < (1 - 14.4 * 0.005000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="graphql_queries",monitor="global",type="api"}) >= 1
      )
  - alert: ApiServiceGraphqlQueriesApdexSLOViolation
    for: 2m
    annotations:
      title: The graphql_queries SLI of the api service (`{{ $labels.stage }}` stage)
        has an apdex violating SLO
      description: |
        The number of GraphQL queries meeting their duration target based on the urgency of the endpoint. By default, a query should take no more than 1s. We're working on making the urgency customizable in [this epic](https://gitlab.com/groups/gitlab-org/-/epics/5841).

        Mutliple queries could be batched inside a single request.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2613733144"
      grafana_variables: environment,stage
      runbook: docs/api/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_6h{component="graphql_queries",monitor="global",type="api"}
          < (1 - 6 * 0.005000)
        )
        and
        (
          gitlab_component_apdex:ratio_30m{component="graphql_queries",monitor="global",type="api"}
          < (1 - 6 * 0.005000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="graphql_queries",monitor="global",type="api"}) >= 0.16667
      )
  - alert: ApiServiceGraphqlQueriesApdexSLOViolationRegional
    for: 2m
    annotations:
      title: The graphql_queries SLI of the api service in region `{{ $labels.region
        }}` has an apdex violating SLO
      description: |
        The number of GraphQL queries meeting their duration target based on the urgency of the endpoint. By default, a query should take no more than 1s. We're working on making the urgency customizable in [this epic](https://gitlab.com/groups/gitlab-org/-/epics/5841).

        Mutliple queries could be batched inside a single request.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2613733144"
      grafana_variables: environment,stage
      runbook: docs/api/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_regional_sli_apdex:ratio_1h{component="graphql_queries",monitor="global",type="api"}
          < (1 - 14.4 * 0.005000)
        )
        and
        (
          gitlab_regional_sli_apdex:ratio_5m{component="graphql_queries",monitor="global",type="api"}
          < (1 - 14.4 * 0.005000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_1h{component="graphql_queries",monitor="global",type="api"}) >= 1
      )
  - alert: ApiServiceGraphqlQueriesApdexSLOViolationRegional
    for: 2m
    annotations:
      title: The graphql_queries SLI of the api service in region `{{ $labels.region
        }}` has an apdex violating SLO
      description: |
        The number of GraphQL queries meeting their duration target based on the urgency of the endpoint. By default, a query should take no more than 1s. We're working on making the urgency customizable in [this epic](https://gitlab.com/groups/gitlab-org/-/epics/5841).

        Mutliple queries could be batched inside a single request.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2613733144"
      grafana_variables: environment,stage
      runbook: docs/api/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_regional_sli_apdex:ratio_6h{component="graphql_queries",monitor="global",type="api"}
          < (1 - 6 * 0.005000)
        )
        and
        (
          gitlab_regional_sli_apdex:ratio_30m{component="graphql_queries",monitor="global",type="api"}
          < (1 - 6 * 0.005000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_6h{component="graphql_queries",monitor="global",type="api"}) >= 0.16667
      )
  - alert: ApiServiceGraphqlQueriesTrafficCessation
    for: 5m
    annotations:
      title: The graphql_queries SLI of the api service (`{{ $labels.stage }}` stage)
        has not received any traffic in the past 30m
      description: |
        The number of GraphQL queries meeting their duration target based on the urgency of the endpoint. By default, a query should take no more than 1s. We're working on making the urgency customizable in [this epic](https://gitlab.com/groups/gitlab-org/-/epics/5841).

        Mutliple queries could be batched inside a single request.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1423714754"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          sli_aggregations:gitlab_sli_graphql_query_apdex_total_rate5m{environment="{{ $labels.environment }}",job="gitlab-rails",stage="{{ $labels.stage }}",type="api"}
        )
      runbook: docs/api/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="graphql_queries",monitor="global",stage="main",type="api"} == 0
      and
      gitlab_component_ops:rate_30m{component="graphql_queries",monitor="global",stage="main",type="api"} offset 1h >= 0.16666666666666666
  - alert: ApiServiceGraphqlQueriesTrafficAbsent
    for: 30m
    annotations:
      title: The graphql_queries SLI of the api service (`{{ $labels.stage }}` stage)
        has not reported any traffic in the past 30m
      description: |
        The number of GraphQL queries meeting their duration target based on the urgency of the endpoint. By default, a query should take no more than 1s. We're working on making the urgency customizable in [this epic](https://gitlab.com/groups/gitlab-org/-/epics/5841).

        Mutliple queries could be batched inside a single request.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1423714754"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          sli_aggregations:gitlab_sli_graphql_query_apdex_total_rate5m{environment="{{ $labels.environment }}",job="gitlab-rails",stage="{{ $labels.stage }}",type="api"}
        )
      runbook: docs/api/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="graphql_queries",monitor="global",stage="main",type="api"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="graphql_queries",monitor="global",stage="main",type="api"}
  - alert: ApiServiceGraphqlQueriesTrafficCessationRegional
    for: 5m
    annotations:
      title: The graphql_queries SLI of the api service in region `{{ $labels.region
        }}` has not received any traffic in the past 30m
      description: |
        The number of GraphQL queries meeting their duration target based on the urgency of the endpoint. By default, a query should take no more than 1s. We're working on making the urgency customizable in [this epic](https://gitlab.com/groups/gitlab-org/-/epics/5841).

        Mutliple queries could be batched inside a single request.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1423714754"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(gitlab_sli_graphql_query_apdex_total{environment="{{ $labels.environment }}",job="gitlab-rails",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="api"}[5m])
        )
      runbook: docs/api/README.md
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_30m{component="graphql_queries",monitor="global",stage="main",type="api"} == 0
      and
      gitlab_regional_sli_ops:rate_30m{component="graphql_queries",monitor="global",stage="main",type="api"} offset 1h >= 0.16666666666666666
  - alert: ApiServiceGraphqlQueriesTrafficAbsentRegional
    for: 30m
    annotations:
      title: The graphql_queries SLI of the api service in region `{{ $labels.region
        }}` has not reported any traffic in the past 30m
      description: |
        The number of GraphQL queries meeting their duration target based on the urgency of the endpoint. By default, a query should take no more than 1s. We're working on making the urgency customizable in [this epic](https://gitlab.com/groups/gitlab-org/-/epics/5841).

        Mutliple queries could be batched inside a single request.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1423714754"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(gitlab_sli_graphql_query_apdex_total{environment="{{ $labels.environment }}",job="gitlab-rails",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="api"}[5m])
        )
      runbook: docs/api/README.md
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_5m{component="graphql_queries",monitor="global",stage="main",type="api"} offset 1h
      unless
      gitlab_regional_sli_ops:rate_5m{component="graphql_queries",monitor="global",stage="main",type="api"}
  - alert: ApiServiceLoadbalancerErrorSLOViolation
    for: 2m
    annotations:
      title: The loadbalancer SLI of the api service (`{{ $labels.stage }}` stage)
        has an error rate violating SLO
      description: |
        Measures aggregated HTTP request traffic through the HAProxy. 5xx responses are considered to be failures.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3255520955"
      grafana_variables: environment,stage
      runbook: docs/api/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="loadbalancer",monitor="global",type="api"}
          > (14.4 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="loadbalancer",monitor="global",type="api"}
          > (14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="loadbalancer",monitor="global",type="api"}) >= 1
      )
  - alert: ApiServiceLoadbalancerErrorSLOViolation
    for: 2m
    annotations:
      title: The loadbalancer SLI of the api service (`{{ $labels.stage }}` stage)
        has an error rate violating SLO
      description: |
        Measures aggregated HTTP request traffic through the HAProxy. 5xx responses are considered to be failures.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3255520955"
      grafana_variables: environment,stage
      runbook: docs/api/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="loadbalancer",monitor="global",type="api"}
          > (6 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="loadbalancer",monitor="global",type="api"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="loadbalancer",monitor="global",type="api"}) >= 0.16667
      )
  - alert: ApiServiceLoadbalancerErrorSLOViolationRegional
    for: 2m
    annotations:
      title: The loadbalancer SLI of the api service in region `{{ $labels.region
        }}` has an error rate violating SLO
      description: |
        Measures aggregated HTTP request traffic through the HAProxy. 5xx responses are considered to be failures.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3255520955"
      grafana_variables: environment,stage
      runbook: docs/api/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_regional_sli_errors:ratio_1h{component="loadbalancer",monitor="global",type="api"}
          > (14.4 * 0.001000)
        )
        and
        (
          gitlab_regional_sli_errors:ratio_5m{component="loadbalancer",monitor="global",type="api"}
          > (14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_1h{component="loadbalancer",monitor="global",type="api"}) >= 1
      )
  - alert: ApiServiceLoadbalancerErrorSLOViolationRegional
    for: 2m
    annotations:
      title: The loadbalancer SLI of the api service in region `{{ $labels.region
        }}` has an error rate violating SLO
      description: |
        Measures aggregated HTTP request traffic through the HAProxy. 5xx responses are considered to be failures.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3255520955"
      grafana_variables: environment,stage
      runbook: docs/api/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_regional_sli_errors:ratio_6h{component="loadbalancer",monitor="global",type="api"}
          > (6 * 0.001000)
        )
        and
        (
          gitlab_regional_sli_errors:ratio_30m{component="loadbalancer",monitor="global",type="api"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_6h{component="loadbalancer",monitor="global",type="api"}) >= 0.16667
      )
  - alert: ApiServiceLoadbalancerTrafficCessation
    for: 5m
    annotations:
      title: The loadbalancer SLI of the api service (`{{ $labels.stage }}` stage)
        has not received any traffic in the past 30m
      description: |
        Measures aggregated HTTP request traffic through the HAProxy. 5xx responses are considered to be failures.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "138982496"
      grafana_variables: environment,stage
      runbook: docs/api/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="loadbalancer",monitor="global",stage="main",type="api"} == 0
      and
      gitlab_component_ops:rate_30m{component="loadbalancer",monitor="global",stage="main",type="api"} offset 1h >= 0.16666666666666666
  - alert: ApiServiceLoadbalancerTrafficAbsent
    for: 30m
    annotations:
      title: The loadbalancer SLI of the api service (`{{ $labels.stage }}` stage)
        has not reported any traffic in the past 30m
      description: |
        Measures aggregated HTTP request traffic through the HAProxy. 5xx responses are considered to be failures.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "138982496"
      grafana_variables: environment,stage
      runbook: docs/api/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="loadbalancer",monitor="global",stage="main",type="api"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="loadbalancer",monitor="global",stage="main",type="api"}
  - alert: ApiServiceLoadbalancerTrafficCessationRegional
    for: 5m
    annotations:
      title: The loadbalancer SLI of the api service in region `{{ $labels.region
        }}` has not received any traffic in the past 30m
      description: |
        Measures aggregated HTTP request traffic through the HAProxy. 5xx responses are considered to be failures.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "138982496"
      grafana_variables: environment,stage
      runbook: docs/api/README.md
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_30m{component="loadbalancer",monitor="global",stage="main",type="api"} == 0
      and
      gitlab_regional_sli_ops:rate_30m{component="loadbalancer",monitor="global",stage="main",type="api"} offset 1h >= 0.16666666666666666
  - alert: ApiServiceLoadbalancerTrafficAbsentRegional
    for: 30m
    annotations:
      title: The loadbalancer SLI of the api service in region `{{ $labels.region
        }}` has not reported any traffic in the past 30m
      description: |
        Measures aggregated HTTP request traffic through the HAProxy. 5xx responses are considered to be failures.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "138982496"
      grafana_variables: environment,stage
      runbook: docs/api/README.md
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_5m{component="loadbalancer",monitor="global",stage="main",type="api"} offset 1h
      unless
      gitlab_regional_sli_ops:rate_5m{component="loadbalancer",monitor="global",stage="main",type="api"}
  - alert: ApiServiceNginxIngressErrorSLOViolation
    for: 2m
    annotations:
      title: The nginx_ingress SLI of the api service (`{{ $labels.stage }}` stage)
        has an error rate violating SLO
      description: |
        nginx for api

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1425819584"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(nginx_ingress_controller_requests:labeled{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",status=~"^5.*",type="api"}[5m])
        )
      runbook: docs/api/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="nginx_ingress",monitor="global",type="api"}
          > (14.4 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="nginx_ingress",monitor="global",type="api"}
          > (14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="nginx_ingress",monitor="global",type="api"}) >= 1
      )
  - alert: ApiServiceNginxIngressErrorSLOViolation
    for: 2m
    annotations:
      title: The nginx_ingress SLI of the api service (`{{ $labels.stage }}` stage)
        has an error rate violating SLO
      description: |
        nginx for api

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1425819584"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(nginx_ingress_controller_requests:labeled{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",status=~"^5.*",type="api"}[5m])
        )
      runbook: docs/api/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="nginx_ingress",monitor="global",type="api"}
          > (6 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="nginx_ingress",monitor="global",type="api"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="nginx_ingress",monitor="global",type="api"}) >= 0.16667
      )
  - alert: ApiServiceNginxIngressErrorSLOViolationRegional
    for: 2m
    annotations:
      title: The nginx_ingress SLI of the api service in region `{{ $labels.region
        }}` has an error rate violating SLO
      description: |
        nginx for api

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1425819584"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(nginx_ingress_controller_requests:labeled{environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}",status=~"^5.*",type="api"}[5m])
        )
      runbook: docs/api/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_regional_sli_errors:ratio_1h{component="nginx_ingress",monitor="global",type="api"}
          > (14.4 * 0.001000)
        )
        and
        (
          gitlab_regional_sli_errors:ratio_5m{component="nginx_ingress",monitor="global",type="api"}
          > (14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_1h{component="nginx_ingress",monitor="global",type="api"}) >= 1
      )
  - alert: ApiServiceNginxIngressErrorSLOViolationRegional
    for: 2m
    annotations:
      title: The nginx_ingress SLI of the api service in region `{{ $labels.region
        }}` has an error rate violating SLO
      description: |
        nginx for api

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1425819584"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(nginx_ingress_controller_requests:labeled{environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}",status=~"^5.*",type="api"}[5m])
        )
      runbook: docs/api/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_regional_sli_errors:ratio_6h{component="nginx_ingress",monitor="global",type="api"}
          > (6 * 0.001000)
        )
        and
        (
          gitlab_regional_sli_errors:ratio_30m{component="nginx_ingress",monitor="global",type="api"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_6h{component="nginx_ingress",monitor="global",type="api"}) >= 0.16667
      )
  - alert: ApiServiceNginxIngressTrafficCessation
    for: 5m
    annotations:
      title: The nginx_ingress SLI of the api service (`{{ $labels.stage }}` stage)
        has not received any traffic in the past 30m
      description: |
        nginx for api

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2358192786"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(nginx_ingress_controller_requests:labeled{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type="api"}[5m])
        )
      runbook: docs/api/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="nginx_ingress",monitor="global",stage="main",type="api"} == 0
      and
      gitlab_component_ops:rate_30m{component="nginx_ingress",monitor="global",stage="main",type="api"} offset 1h >= 0.16666666666666666
  - alert: ApiServiceNginxIngressTrafficAbsent
    for: 30m
    annotations:
      title: The nginx_ingress SLI of the api service (`{{ $labels.stage }}` stage)
        has not reported any traffic in the past 30m
      description: |
        nginx for api

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2358192786"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(nginx_ingress_controller_requests:labeled{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type="api"}[5m])
        )
      runbook: docs/api/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="nginx_ingress",monitor="global",stage="main",type="api"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="nginx_ingress",monitor="global",stage="main",type="api"}
  - alert: ApiServiceNginxIngressTrafficCessationRegional
    for: 5m
    annotations:
      title: The nginx_ingress SLI of the api service in region `{{ $labels.region
        }}` has not received any traffic in the past 30m
      description: |
        nginx for api

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2358192786"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(nginx_ingress_controller_requests:labeled{environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="api"}[5m])
        )
      runbook: docs/api/README.md
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_30m{component="nginx_ingress",monitor="global",stage="main",type="api"} == 0
      and
      gitlab_regional_sli_ops:rate_30m{component="nginx_ingress",monitor="global",stage="main",type="api"} offset 1h >= 0.16666666666666666
  - alert: ApiServiceNginxIngressTrafficAbsentRegional
    for: 30m
    annotations:
      title: The nginx_ingress SLI of the api service in region `{{ $labels.region
        }}` has not reported any traffic in the past 30m
      description: |
        nginx for api

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2358192786"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(nginx_ingress_controller_requests:labeled{environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="api"}[5m])
        )
      runbook: docs/api/README.md
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_5m{component="nginx_ingress",monitor="global",stage="main",type="api"} offset 1h
      unless
      gitlab_regional_sli_ops:rate_5m{component="nginx_ingress",monitor="global",stage="main",type="api"}
  - alert: ApiServicePumaErrorSLOViolation
    for: 2m
    annotations:
      title: The puma SLI of the api service (`{{ $labels.stage }}` stage) has an
        error rate violating SLO
      description: |
        This SLI monitors API traffic in aggregate, in the GitLab rails monolith, via its HTTP interface. 5xx responses are treated as failures.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2425637513"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          sli_aggregations:http_requests_total_rate5m{environment="{{ $labels.environment }}",job="gitlab-rails",stage="{{ $labels.stage }}",status=~"5..",type="api"}
        )
      runbook: docs/api/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="puma",monitor="global",type="api"}
          > (14.4 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="puma",monitor="global",type="api"}
          > (14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="puma",monitor="global",type="api"}) >= 1
      )
  - alert: ApiServicePumaErrorSLOViolation
    for: 2m
    annotations:
      title: The puma SLI of the api service (`{{ $labels.stage }}` stage) has an
        error rate violating SLO
      description: |
        This SLI monitors API traffic in aggregate, in the GitLab rails monolith, via its HTTP interface. 5xx responses are treated as failures.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2425637513"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          sli_aggregations:http_requests_total_rate5m{environment="{{ $labels.environment }}",job="gitlab-rails",stage="{{ $labels.stage }}",status=~"5..",type="api"}
        )
      runbook: docs/api/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="puma",monitor="global",type="api"}
          > (6 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="puma",monitor="global",type="api"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="puma",monitor="global",type="api"}) >= 0.16667
      )
  - alert: ApiServicePumaErrorSLOViolationRegional
    for: 2m
    annotations:
      title: The puma SLI of the api service in region `{{ $labels.region }}` has
        an error rate violating SLO
      description: |
        This SLI monitors API traffic in aggregate, in the GitLab rails monolith, via its HTTP interface. 5xx responses are treated as failures.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2425637513"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          sli_aggregations:http_requests_total_rate5m{environment="{{ $labels.environment }}",job="gitlab-rails",region="{{ $labels.region }}",stage="{{ $labels.stage }}",status=~"5..",type="api"}
        )
      runbook: docs/api/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_regional_sli_errors:ratio_1h{component="puma",monitor="global",type="api"}
          > (14.4 * 0.001000)
        )
        and
        (
          gitlab_regional_sli_errors:ratio_5m{component="puma",monitor="global",type="api"}
          > (14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_1h{component="puma",monitor="global",type="api"}) >= 1
      )
  - alert: ApiServicePumaErrorSLOViolationRegional
    for: 2m
    annotations:
      title: The puma SLI of the api service in region `{{ $labels.region }}` has
        an error rate violating SLO
      description: |
        This SLI monitors API traffic in aggregate, in the GitLab rails monolith, via its HTTP interface. 5xx responses are treated as failures.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2425637513"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          sli_aggregations:http_requests_total_rate5m{environment="{{ $labels.environment }}",job="gitlab-rails",region="{{ $labels.region }}",stage="{{ $labels.stage }}",status=~"5..",type="api"}
        )
      runbook: docs/api/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_regional_sli_errors:ratio_6h{component="puma",monitor="global",type="api"}
          > (6 * 0.001000)
        )
        and
        (
          gitlab_regional_sli_errors:ratio_30m{component="puma",monitor="global",type="api"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_6h{component="puma",monitor="global",type="api"}) >= 0.16667
      )
  - alert: ApiServicePumaTrafficCessation
    for: 5m
    annotations:
      title: The puma SLI of the api service (`{{ $labels.stage }}` stage) has not
        received any traffic in the past 30m
      description: |
        This SLI monitors API traffic in aggregate, in the GitLab rails monolith, via its HTTP interface. 5xx responses are treated as failures.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "110019945"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          sli_aggregations:http_requests_total_rate5m{environment="{{ $labels.environment }}",job="gitlab-rails",stage="{{ $labels.stage }}",type="api"}
        )
      runbook: docs/api/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="puma",monitor="global",stage="main",type="api"} == 0
      and
      gitlab_component_ops:rate_30m{component="puma",monitor="global",stage="main",type="api"} offset 1h >= 0.16666666666666666
  - alert: ApiServicePumaTrafficAbsent
    for: 30m
    annotations:
      title: The puma SLI of the api service (`{{ $labels.stage }}` stage) has not
        reported any traffic in the past 30m
      description: |
        This SLI monitors API traffic in aggregate, in the GitLab rails monolith, via its HTTP interface. 5xx responses are treated as failures.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "110019945"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          sli_aggregations:http_requests_total_rate5m{environment="{{ $labels.environment }}",job="gitlab-rails",stage="{{ $labels.stage }}",type="api"}
        )
      runbook: docs/api/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="puma",monitor="global",stage="main",type="api"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="puma",monitor="global",stage="main",type="api"}
  - alert: ApiServicePumaTrafficCessationRegional
    for: 5m
    annotations:
      title: The puma SLI of the api service in region `{{ $labels.region }}` has
        not received any traffic in the past 30m
      description: |
        This SLI monitors API traffic in aggregate, in the GitLab rails monolith, via its HTTP interface. 5xx responses are treated as failures.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "110019945"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          sli_aggregations:http_requests_total_rate5m{environment="{{ $labels.environment }}",job="gitlab-rails",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="api"}
        )
      runbook: docs/api/README.md
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_30m{component="puma",monitor="global",stage="main",type="api"} == 0
      and
      gitlab_regional_sli_ops:rate_30m{component="puma",monitor="global",stage="main",type="api"} offset 1h >= 0.16666666666666666
  - alert: ApiServicePumaTrafficAbsentRegional
    for: 30m
    annotations:
      title: The puma SLI of the api service in region `{{ $labels.region }}` has
        not reported any traffic in the past 30m
      description: |
        This SLI monitors API traffic in aggregate, in the GitLab rails monolith, via its HTTP interface. 5xx responses are treated as failures.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "110019945"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          sli_aggregations:http_requests_total_rate5m{environment="{{ $labels.environment }}",job="gitlab-rails",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="api"}
        )
      runbook: docs/api/README.md
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_5m{component="puma",monitor="global",stage="main",type="api"} offset 1h
      unless
      gitlab_regional_sli_ops:rate_5m{component="puma",monitor="global",stage="main",type="api"}
  - alert: ApiServiceRailsRequestsApdexSLOViolation
    for: 2m
    annotations:
      title: The rails_requests SLI of the api service (`{{ $labels.stage }}` stage)
        has an apdex violating SLO
      description: |
        The number of requests meeting their duration target based on the urgency of the endpoint. By default, a request should take no more than 1s. But this can be adjusted by endpoint.

        Read more about this in the [documentation](https://docs.gitlab.com/ee/development/application_slis/rails_request_apdex.html).

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3831968369"
      grafana_variables: environment,stage
      runbook: docs/api/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="rails_requests",monitor="global",type="api"}
          < (1 - 14.4 * 0.010000)
        )
        and
        (
          gitlab_component_apdex:ratio_5m{component="rails_requests",monitor="global",type="api"}
          < (1 - 14.4 * 0.010000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="rails_requests",monitor="global",type="api"}) >= 1
      )
  - alert: ApiServiceRailsRequestsApdexSLOViolation
    for: 2m
    annotations:
      title: The rails_requests SLI of the api service (`{{ $labels.stage }}` stage)
        has an apdex violating SLO
      description: |
        The number of requests meeting their duration target based on the urgency of the endpoint. By default, a request should take no more than 1s. But this can be adjusted by endpoint.

        Read more about this in the [documentation](https://docs.gitlab.com/ee/development/application_slis/rails_request_apdex.html).

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3831968369"
      grafana_variables: environment,stage
      runbook: docs/api/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_6h{component="rails_requests",monitor="global",type="api"}
          < (1 - 6 * 0.010000)
        )
        and
        (
          gitlab_component_apdex:ratio_30m{component="rails_requests",monitor="global",type="api"}
          < (1 - 6 * 0.010000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="rails_requests",monitor="global",type="api"}) >= 0.16667
      )
  - alert: ApiServiceRailsRequestsApdexSLOViolationRegional
    for: 2m
    annotations:
      title: The rails_requests SLI of the api service in region `{{ $labels.region
        }}` has an apdex violating SLO
      description: |
        The number of requests meeting their duration target based on the urgency of the endpoint. By default, a request should take no more than 1s. But this can be adjusted by endpoint.

        Read more about this in the [documentation](https://docs.gitlab.com/ee/development/application_slis/rails_request_apdex.html).

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3831968369"
      grafana_variables: environment,stage
      runbook: docs/api/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_regional_sli_apdex:ratio_1h{component="rails_requests",monitor="global",type="api"}
          < (1 - 14.4 * 0.010000)
        )
        and
        (
          gitlab_regional_sli_apdex:ratio_5m{component="rails_requests",monitor="global",type="api"}
          < (1 - 14.4 * 0.010000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_1h{component="rails_requests",monitor="global",type="api"}) >= 1
      )
  - alert: ApiServiceRailsRequestsApdexSLOViolationRegional
    for: 2m
    annotations:
      title: The rails_requests SLI of the api service in region `{{ $labels.region
        }}` has an apdex violating SLO
      description: |
        The number of requests meeting their duration target based on the urgency of the endpoint. By default, a request should take no more than 1s. But this can be adjusted by endpoint.

        Read more about this in the [documentation](https://docs.gitlab.com/ee/development/application_slis/rails_request_apdex.html).

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3831968369"
      grafana_variables: environment,stage
      runbook: docs/api/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_regional_sli_apdex:ratio_6h{component="rails_requests",monitor="global",type="api"}
          < (1 - 6 * 0.010000)
        )
        and
        (
          gitlab_regional_sli_apdex:ratio_30m{component="rails_requests",monitor="global",type="api"}
          < (1 - 6 * 0.010000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_6h{component="rails_requests",monitor="global",type="api"}) >= 0.16667
      )
  - alert: ApiServiceRailsRequestsTrafficCessation
    for: 5m
    annotations:
      title: The rails_requests SLI of the api service (`{{ $labels.stage }}` stage)
        has not received any traffic in the past 30m
      description: |
        The number of requests meeting their duration target based on the urgency of the endpoint. By default, a request should take no more than 1s. But this can be adjusted by endpoint.

        Read more about this in the [documentation](https://docs.gitlab.com/ee/development/application_slis/rails_request_apdex.html).

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "164190586"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          sli_aggregations:gitlab_sli_rails_request_apdex_total_rate5m{environment="{{ $labels.environment }}",job="gitlab-rails",stage="{{ $labels.stage }}",type="api"}
        )
      runbook: docs/api/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="rails_requests",monitor="global",stage="main",type="api"} == 0
      and
      gitlab_component_ops:rate_30m{component="rails_requests",monitor="global",stage="main",type="api"} offset 1h >= 0.16666666666666666
  - alert: ApiServiceRailsRequestsTrafficAbsent
    for: 30m
    annotations:
      title: The rails_requests SLI of the api service (`{{ $labels.stage }}` stage)
        has not reported any traffic in the past 30m
      description: |
        The number of requests meeting their duration target based on the urgency of the endpoint. By default, a request should take no more than 1s. But this can be adjusted by endpoint.

        Read more about this in the [documentation](https://docs.gitlab.com/ee/development/application_slis/rails_request_apdex.html).

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "164190586"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          sli_aggregations:gitlab_sli_rails_request_apdex_total_rate5m{environment="{{ $labels.environment }}",job="gitlab-rails",stage="{{ $labels.stage }}",type="api"}
        )
      runbook: docs/api/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="rails_requests",monitor="global",stage="main",type="api"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="rails_requests",monitor="global",stage="main",type="api"}
  - alert: ApiServiceRailsRequestsTrafficCessationRegional
    for: 5m
    annotations:
      title: The rails_requests SLI of the api service in region `{{ $labels.region
        }}` has not received any traffic in the past 30m
      description: |
        The number of requests meeting their duration target based on the urgency of the endpoint. By default, a request should take no more than 1s. But this can be adjusted by endpoint.

        Read more about this in the [documentation](https://docs.gitlab.com/ee/development/application_slis/rails_request_apdex.html).

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "164190586"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(gitlab_sli_rails_request_apdex_total{environment="{{ $labels.environment }}",job="gitlab-rails",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="api"}[5m])
        )
      runbook: docs/api/README.md
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_30m{component="rails_requests",monitor="global",stage="main",type="api"} == 0
      and
      gitlab_regional_sli_ops:rate_30m{component="rails_requests",monitor="global",stage="main",type="api"} offset 1h >= 0.16666666666666666
  - alert: ApiServiceRailsRequestsTrafficAbsentRegional
    for: 30m
    annotations:
      title: The rails_requests SLI of the api service in region `{{ $labels.region
        }}` has not reported any traffic in the past 30m
      description: |
        The number of requests meeting their duration target based on the urgency of the endpoint. By default, a request should take no more than 1s. But this can be adjusted by endpoint.

        Read more about this in the [documentation](https://docs.gitlab.com/ee/development/application_slis/rails_request_apdex.html).

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "164190586"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(gitlab_sli_rails_request_apdex_total{environment="{{ $labels.environment }}",job="gitlab-rails",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="api"}[5m])
        )
      runbook: docs/api/README.md
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_5m{component="rails_requests",monitor="global",stage="main",type="api"} offset 1h
      unless
      gitlab_regional_sli_ops:rate_5m{component="rails_requests",monitor="global",stage="main",type="api"}
  - alert: ApiServiceWorkhorseApdexSLOViolation
    for: 2m
    annotations:
      title: The workhorse SLI of the api service (`{{ $labels.stage }}` stage) has
        an apdex violating SLO
      description: |
        Aggregation of most web requests that pass through workhorse, monitored via the HTTP interface. Excludes health, readiness and liveness requests. Some known slow requests, such as HTTP uploads, are excluded from the apdex score.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2586818196"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(gitlab_workhorse_http_request_duration_seconds_bucket{job=~"gitlab-workhorse-api|gitlab-workhorse", type="api", route!="\\A/api/v4/jobs/request\\z", route!="^/api/v4/jobs/request\\z", route!="^/-/health$", route!="^/-/(readiness|liveness)$", environment="{{ $labels.environment }}",stage="{{ $labels.stage }}"}[5m])
          )
        )
      runbook: docs/api/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="workhorse",monitor="global",type="api"}
          < (1 - 14.4 * 0.005000)
        )
        and
        (
          gitlab_component_apdex:ratio_5m{component="workhorse",monitor="global",type="api"}
          < (1 - 14.4 * 0.005000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="workhorse",monitor="global",type="api"}) >= 1
      )
  - alert: ApiServiceWorkhorseApdexSLOViolation
    for: 2m
    annotations:
      title: The workhorse SLI of the api service (`{{ $labels.stage }}` stage) has
        an apdex violating SLO
      description: |
        Aggregation of most web requests that pass through workhorse, monitored via the HTTP interface. Excludes health, readiness and liveness requests. Some known slow requests, such as HTTP uploads, are excluded from the apdex score.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2586818196"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(gitlab_workhorse_http_request_duration_seconds_bucket{job=~"gitlab-workhorse-api|gitlab-workhorse", type="api", route!="\\A/api/v4/jobs/request\\z", route!="^/api/v4/jobs/request\\z", route!="^/-/health$", route!="^/-/(readiness|liveness)$", environment="{{ $labels.environment }}",stage="{{ $labels.stage }}"}[5m])
          )
        )
      runbook: docs/api/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_6h{component="workhorse",monitor="global",type="api"}
          < (1 - 6 * 0.005000)
        )
        and
        (
          gitlab_component_apdex:ratio_30m{component="workhorse",monitor="global",type="api"}
          < (1 - 6 * 0.005000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="workhorse",monitor="global",type="api"}) >= 0.16667
      )
  - alert: ApiServiceWorkhorseApdexSLOViolationRegional
    for: 2m
    annotations:
      title: The workhorse SLI of the api service in region `{{ $labels.region }}`
        has an apdex violating SLO
      description: |
        Aggregation of most web requests that pass through workhorse, monitored via the HTTP interface. Excludes health, readiness and liveness requests. Some known slow requests, such as HTTP uploads, are excluded from the apdex score.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2586818196"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,region,le) (
            rate(gitlab_workhorse_http_request_duration_seconds_bucket{job=~"gitlab-workhorse-api|gitlab-workhorse", type="api", route!="\\A/api/v4/jobs/request\\z", route!="^/api/v4/jobs/request\\z", route!="^/-/health$", route!="^/-/(readiness|liveness)$", environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}"}[5m])
          )
        )
      runbook: docs/api/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_regional_sli_apdex:ratio_1h{component="workhorse",monitor="global",type="api"}
          < (1 - 14.4 * 0.005000)
        )
        and
        (
          gitlab_regional_sli_apdex:ratio_5m{component="workhorse",monitor="global",type="api"}
          < (1 - 14.4 * 0.005000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_1h{component="workhorse",monitor="global",type="api"}) >= 1
      )
  - alert: ApiServiceWorkhorseApdexSLOViolationRegional
    for: 2m
    annotations:
      title: The workhorse SLI of the api service in region `{{ $labels.region }}`
        has an apdex violating SLO
      description: |
        Aggregation of most web requests that pass through workhorse, monitored via the HTTP interface. Excludes health, readiness and liveness requests. Some known slow requests, such as HTTP uploads, are excluded from the apdex score.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2586818196"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,region,le) (
            rate(gitlab_workhorse_http_request_duration_seconds_bucket{job=~"gitlab-workhorse-api|gitlab-workhorse", type="api", route!="\\A/api/v4/jobs/request\\z", route!="^/api/v4/jobs/request\\z", route!="^/-/health$", route!="^/-/(readiness|liveness)$", environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}"}[5m])
          )
        )
      runbook: docs/api/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_regional_sli_apdex:ratio_6h{component="workhorse",monitor="global",type="api"}
          < (1 - 6 * 0.005000)
        )
        and
        (
          gitlab_regional_sli_apdex:ratio_30m{component="workhorse",monitor="global",type="api"}
          < (1 - 6 * 0.005000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_6h{component="workhorse",monitor="global",type="api"}) >= 0.16667
      )
  - alert: ApiServiceWorkhorseErrorSLOViolation
    for: 2m
    annotations:
      title: The workhorse SLI of the api service (`{{ $labels.stage }}` stage) has
        an error rate violating SLO
      description: |
        Aggregation of most web requests that pass through workhorse, monitored via the HTTP interface. Excludes health, readiness and liveness requests. Some known slow requests, such as HTTP uploads, are excluded from the apdex score.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2047984749"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_workhorse_http_requests_total{job=~"gitlab-workhorse-api|gitlab-workhorse", type="api", code=~"^5.*", route!="^/-/health$", route!="^/-/(readiness|liveness)$", environment="{{ $labels.environment }}",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/api/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="workhorse",monitor="global",type="api"}
          > (14.4 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="workhorse",monitor="global",type="api"}
          > (14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="workhorse",monitor="global",type="api"}) >= 1
      )
  - alert: ApiServiceWorkhorseErrorSLOViolation
    for: 2m
    annotations:
      title: The workhorse SLI of the api service (`{{ $labels.stage }}` stage) has
        an error rate violating SLO
      description: |
        Aggregation of most web requests that pass through workhorse, monitored via the HTTP interface. Excludes health, readiness and liveness requests. Some known slow requests, such as HTTP uploads, are excluded from the apdex score.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2047984749"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_workhorse_http_requests_total{job=~"gitlab-workhorse-api|gitlab-workhorse", type="api", code=~"^5.*", route!="^/-/health$", route!="^/-/(readiness|liveness)$", environment="{{ $labels.environment }}",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/api/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="workhorse",monitor="global",type="api"}
          > (6 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="workhorse",monitor="global",type="api"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="workhorse",monitor="global",type="api"}) >= 0.16667
      )
  - alert: ApiServiceWorkhorseErrorSLOViolationRegional
    for: 2m
    annotations:
      title: The workhorse SLI of the api service in region `{{ $labels.region }}`
        has an error rate violating SLO
      description: |
        Aggregation of most web requests that pass through workhorse, monitored via the HTTP interface. Excludes health, readiness and liveness requests. Some known slow requests, such as HTTP uploads, are excluded from the apdex score.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2047984749"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(gitlab_workhorse_http_requests_total{job=~"gitlab-workhorse-api|gitlab-workhorse", type="api", code=~"^5.*", route!="^/-/health$", route!="^/-/(readiness|liveness)$", environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/api/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_regional_sli_errors:ratio_1h{component="workhorse",monitor="global",type="api"}
          > (14.4 * 0.001000)
        )
        and
        (
          gitlab_regional_sli_errors:ratio_5m{component="workhorse",monitor="global",type="api"}
          > (14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_1h{component="workhorse",monitor="global",type="api"}) >= 1
      )
  - alert: ApiServiceWorkhorseErrorSLOViolationRegional
    for: 2m
    annotations:
      title: The workhorse SLI of the api service in region `{{ $labels.region }}`
        has an error rate violating SLO
      description: |
        Aggregation of most web requests that pass through workhorse, monitored via the HTTP interface. Excludes health, readiness and liveness requests. Some known slow requests, such as HTTP uploads, are excluded from the apdex score.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2047984749"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(gitlab_workhorse_http_requests_total{job=~"gitlab-workhorse-api|gitlab-workhorse", type="api", code=~"^5.*", route!="^/-/health$", route!="^/-/(readiness|liveness)$", environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/api/README.md
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_regional_sli_errors:ratio_6h{component="workhorse",monitor="global",type="api"}
          > (6 * 0.001000)
        )
        and
        (
          gitlab_regional_sli_errors:ratio_30m{component="workhorse",monitor="global",type="api"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_6h{component="workhorse",monitor="global",type="api"}) >= 0.16667
      )
  - alert: ApiServiceWorkhorseTrafficCessation
    for: 5m
    annotations:
      title: The workhorse SLI of the api service (`{{ $labels.stage }}` stage) has
        not received any traffic in the past 30m
      description: |
        Aggregation of most web requests that pass through workhorse, monitored via the HTTP interface. Excludes health, readiness and liveness requests. Some known slow requests, such as HTTP uploads, are excluded from the apdex score.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "831392945"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_workhorse_http_requests_total{job=~"gitlab-workhorse-api|gitlab-workhorse", type="api", environment="{{ $labels.environment }}",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/api/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="workhorse",monitor="global",stage="main",type="api"} == 0
      and
      gitlab_component_ops:rate_30m{component="workhorse",monitor="global",stage="main",type="api"} offset 1h >= 0.16666666666666666
  - alert: ApiServiceWorkhorseTrafficAbsent
    for: 30m
    annotations:
      title: The workhorse SLI of the api service (`{{ $labels.stage }}` stage) has
        not reported any traffic in the past 30m
      description: |
        Aggregation of most web requests that pass through workhorse, monitored via the HTTP interface. Excludes health, readiness and liveness requests. Some known slow requests, such as HTTP uploads, are excluded from the apdex score.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "831392945"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_workhorse_http_requests_total{job=~"gitlab-workhorse-api|gitlab-workhorse", type="api", environment="{{ $labels.environment }}",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/api/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="workhorse",monitor="global",stage="main",type="api"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="workhorse",monitor="global",stage="main",type="api"}
  - alert: ApiServiceWorkhorseTrafficCessationRegional
    for: 5m
    annotations:
      title: The workhorse SLI of the api service in region `{{ $labels.region }}`
        has not received any traffic in the past 30m
      description: |
        Aggregation of most web requests that pass through workhorse, monitored via the HTTP interface. Excludes health, readiness and liveness requests. Some known slow requests, such as HTTP uploads, are excluded from the apdex score.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "831392945"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(gitlab_workhorse_http_requests_total{job=~"gitlab-workhorse-api|gitlab-workhorse", type="api", environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/api/README.md
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_30m{component="workhorse",monitor="global",stage="main",type="api"} == 0
      and
      gitlab_regional_sli_ops:rate_30m{component="workhorse",monitor="global",stage="main",type="api"} offset 1h >= 0.16666666666666666
  - alert: ApiServiceWorkhorseTrafficAbsentRegional
    for: 30m
    annotations:
      title: The workhorse SLI of the api service in region `{{ $labels.region }}`
        has not reported any traffic in the past 30m
      description: |
        Aggregation of most web requests that pass through workhorse, monitored via the HTTP interface. Excludes health, readiness and liveness requests. Some known slow requests, such as HTTP uploads, are excluded from the apdex score.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: api-main/api-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/api-main/api-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "831392945"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(gitlab_workhorse_http_requests_total{job=~"gitlab-workhorse-api|gitlab-workhorse", type="api", environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/api/README.md
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_5m{component="workhorse",monitor="global",stage="main",type="api"} offset 1h
      unless
      gitlab_regional_sli_ops:rate_5m{component="workhorse",monitor="global",stage="main",type="api"}
