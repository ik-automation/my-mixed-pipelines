# WARNING. DO NOT EDIT THIS FILE BY HAND. USE ./thanos-rules-jsonnet/service-alerts.jsonnet TO GENERATE IT
# YOUR CHANGES WILL BE OVERRIDDEN
groups:
- name: slo_alerts.rules
  partial_response_strategy: warn
  rules:
  - alert: service_ops_out_of_bounds_upper_5m
    for: 5m
    annotations:
      title: 'Anomaly detection: The `{{ $labels.type }}` service (`{{ $labels.stage
        }}` stage) is receiving more requests than normal'
      description: |
        The `{{ $labels.type }}` service (`{{ $labels.stage }}` stage) is receiving more requests than normal. This is often caused by user generated traffic, sometimes abuse. It can also be cause by application changes that lead to higher operations rates or from retries in the event of errors. Check the abuse reporting watches in Elastic, ELK for possible abuse, error rates (possibly on upstream services) for root cause.
      grafana_dashboard_id: general-service/service-platform-metrics
      grafana_dashboard_link: https://dashboards.gitlab.net/d/general-service/service-platform-metrics?from=now-12h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-type={{ $labels.type }}&var-stage={{ $labels.stage
        }}
      grafana_min_zoom_hours: "12"
      grafana_panel_id: "2633741645"
      grafana_variables: environment,type,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/monitoring/definition-service-ops-rate.md
      promql_template_1: gitlab_service_ops:rate{environment="$environment", type="$type",
        stage="$stage"}
      promql_template_2: gitlab_component_ops:rate{environment="$environment", type="$type",
        stage="$stage"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      rules_domain: general
      severity: s4
    expr: |
      (
          (
            (gitlab_service_ops:rate{monitor="global"} -  gitlab_service_ops:rate:prediction{monitor="global"}) /
          gitlab_service_ops:rate:stddev_over_time_1w{monitor="global"}
        )
        >
        3
      )
      unless on(tier, type)
      gitlab_service:mapping:disable_ops_rate_prediction{monitor="global"}
  - alert: service_ops_out_of_bounds_lower_5m
    for: 5m
    annotations:
      title: 'Anomaly detection: The `{{ $labels.type }}` service (`{{ $labels.stage
        }}` stage) is receiving fewer requests than normal'
      description: |
        The `{{ $labels.type }}` service (`{{ $labels.stage }}` stage) is receiving fewer requests than normal. This is often caused by a failure in an upstream service - for example, an upstream load balancer rejected all incoming traffic. In many cases, this is as serious or more serious than a traffic spike. Check upstream services for errors that may be leading to traffic flow issues in downstream services.
      grafana_dashboard_id: general-service/service-platform-metrics
      grafana_dashboard_link: https://dashboards.gitlab.net/d/general-service/service-platform-metrics?from=now-12h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-type={{ $labels.type }}&var-stage={{ $labels.stage
        }}
      grafana_min_zoom_hours: "12"
      grafana_panel_id: "2633741645"
      grafana_variables: environment,type,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/monitoring/definition-service-ops-rate.md
      promql_template_1: gitlab_service_ops:rate{environment="$environment", type="$type",
        stage="$stage"}
      promql_template_2: gitlab_component_ops:rate{environment="$environment", type="$type",
        stage="$stage"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      rules_domain: general
      severity: s4
    expr: |
      (
          (
            (gitlab_service_ops:rate{monitor="global"} -  gitlab_service_ops:rate:prediction{monitor="global"}) /
          gitlab_service_ops:rate:stddev_over_time_1w{monitor="global"}
        )
        <
        -3
      )
      unless on(tier, type)
      gitlab_service:mapping:disable_ops_rate_prediction{monitor="global"}
  - alert: service_cny_apdex_slo_out_of_bounds_lower_5m
    for: 5m
    annotations:
      title: Bad canary? The `cny` stage of  the `{{ $labels.type }}` service has
        a apdex score (latency) below SLO, but the main stage does not.
      description: |
        The `cny` stage of  the `{{ $labels.type }}` service has a apdex score (latency) below SLO, but the main stage does not. While there are other reasons, such as high traffic to the canary stage, experiencing a high error rate in `cny`, without any corresponding errors in `main` stage could indicate a malfunctioning canary deploy. Consider investigating further. If there is no evidence of another cause, please consider stopping the deployment process while the problem is investigated. This could indicate that the canary deployment is not functioning correctly. Please consider stopping the deployment process while the problem is investigated.
      grafana_dashboard_id: general-service-stages/general-service-platform-metrics-stages
      grafana_dashboard_link: https://dashboards.gitlab.net/d/general-service-stages/general-service-platform-metrics-stages?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-type={{ $labels.type }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "588840999"
      grafana_variables: environment,type
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/monitoring/definition-service-apdex.md
      promql_template_1: gitlab_service_apdex:ratio{environment="$environment", type="$type",
        stage="$stage"}
      promql_template_2: gitlab_component_apdex:ratio{environment="$environment",
        type="$type", stage="$stage"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: symptom
      canary_warning: "yes"
      deprecated: "yes"
      pager: pagerduty
      rules_domain: general
      severity: s2
      slo_alert: "yes"
    expr: |
      (
          (
            (
              avg(gitlab_service_apdex:ratio{stage="cny", monitor="global"}) by (environment, tier, type)
            < ignoring(environment, stage) group_left
              avg(slo:min:gitlab_service_apdex:ratio{monitor="global"}) by (tier, type)
          )
          unless ignoring(stage)
          (
              avg(gitlab_service_apdex:ratio{stage="main", monitor="global"}) by (environment, tier, type)
            < ignoring(environment, stage) group_left
              avg(slo:min:gitlab_service_apdex:ratio{monitor="global"}) by (tier, type)
          )
        )
        and on(environment, tier, type)
        (
            (
              gitlab_service_ops:rate{stage="cny", monitor="global"}
            / ignoring(stage)
            gitlab_service_ops:rate{stage="main", monitor="global"}
          ) >= 0.01
        )
      )
      unless on(tier, type)
      (
          slo:min:events:gitlab_service_apdex:ratio{monitor="global"}
      )
  - alert: service_cny_error_ratio_slo_out_of_bounds_upper_5m
    for: 5m
    annotations:
      title: Bad canary? The `cny` stage of  the `{{ $labels.type }}` service has
        an error-ratio exceeding SLO, but the main stage does not.
      description: |
        The `cny` stage of  the `{{ $labels.type }}` service has an error-ratio exceeding SLO, but the main stage does not. While there are other reasons, such as high traffic to the canary stage, experiencing a high error rate in `cny`, without any corresponding errors in `main` stage could indicate a malfunctioning canary deploy. Consider investigating further. If there is no evidence of another cause, please consider stopping the deployment process while the problem is investigated.
      grafana_dashboard_id: general-service-stages/general-service-platform-metrics-stages
      grafana_dashboard_link: https://dashboards.gitlab.net/d/general-service-stages/general-service-platform-metrics-stages?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-type={{ $labels.type }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2383655193"
      grafana_variables: environment,type
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/monitoring/definition-service-error-rate.md
      promql_template_1: gitlab_service_errors:ratio{environment="$environment", type="$type",
        stage="$stage"}
      promql_template_2: gitlab_component_errors:ratio{environment="$environment",
        type="$type", stage="$stage"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: symptom
      canary_warning: "yes"
      deprecated: "yes"
      pager: pagerduty
      rules_domain: general
      severity: s2
      slo_alert: "yes"
    expr: |
      (
          (
            (
              avg(gitlab_service_errors:ratio{stage="cny", monitor="global"}) by (environment, tier, type, stage)
            > ignoring(environment, stage) group_left
            avg(slo:max:gitlab_service_errors:ratio{monitor="global"}) by (tier, type)
          )
          unless ignoring(stage)
          (
              avg(gitlab_service_errors:ratio{stage="main", monitor="global"}) by (environment, tier, type, stage)
            > ignoring(environment, stage) group_left
            avg(slo:max:gitlab_service_errors:ratio{monitor="global"}) by (tier, type)
          )
        )
        and on(environment, tier, type)
        (
            (
              gitlab_service_ops:rate{stage="cny", monitor="global"}
            / ignoring(stage)
            gitlab_service_ops:rate{stage="main", monitor="global"}
          ) >= 0.01
        )
      )
      unless on(tier, type)
      (
          slo:max:events:gitlab_service_errors:ratio{monitor="global"}
      )
