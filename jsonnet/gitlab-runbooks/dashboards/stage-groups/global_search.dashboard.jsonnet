// This file is autogenerated using scripts/update_stage_groups_dashboards.rb
// Please feel free to customize this file.
local stageGroupDashboards = import './stage-group-dashboards.libsonnet';
local basic = import 'grafana/basic.libsonnet';
local layout = import 'grafana/layout.libsonnet';

local elasticQueueSize(title, metric) =
  basic.timeseries(
    title=title,
    yAxisLabel='Documents in queue',
    stableId='global-search-queue-size-%s' % std.asciiLower(title),
    description=|||
      The number of records waiting to be synced to Elasticsearch for Global Search. These jobs are created when projects are imported or when Elasticsearch is enabled for a group in order to backfill all project data to the index. These are picked up in batches every minute. Lower is better but the batching every minute means it will not usually stay at 0. Occasional spikes are expected but sustained steady growth over a long period of time may indicate that ElasticIndexBulkCronWorker or ElasticIndexInitialBulkCronWorker is not keeping up. It may also indicate that indexing is paused in `Admin > Settings > Advanced Search`. Indexing may have been deliberately paused for maintenance.
    |||,
    query=|||
      quantile(0.5, %(metric)s{environment="$environment", stage="$stage"})
    ||| % { metric: metric },
  );

stageGroupDashboards.dashboard('global_search', ['api', 'sidekiq', 'web'])
.addPanels(
  layout.rowGrid(
    'ElasticSearch queue size',
    [
      elasticQueueSize('Overall', 'global_search_bulk_cron_queue_size'),
      elasticQueueSize('Initial', 'global_search_bulk_cron_initial_queue_size'),
    ],
    startRow=1000,
  ),
)
.stageGroupDashboardTrailer()
