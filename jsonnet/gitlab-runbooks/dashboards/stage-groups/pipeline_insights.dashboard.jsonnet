// This file is autogenerated using scripts/update_stage_groups_dashboards.rb
// Please feel free to customize this file.
local stageGroupDashboards = import './stage-group-dashboards.libsonnet';
local grafana = import 'github.com/grafana/grafonnet-lib/grafonnet/grafana.libsonnet';
local basic = import 'grafana/basic.libsonnet';
local layout = import 'grafana/layout.libsonnet';

local parsers = [
  'Gitlab::Ci::Parsers::Coverage::Cobertura',
  'Gitlab::Ci::Parsers::Test::Junit',
  'Gitlab::Ci::Parsers::Accessibility::Pa11y',
];
local parsersSelector = |||
  environment='$environment', stage='$stage', parser=~'(%(parsers)s)'
||| % { parsers: std.join('|', parsers) };

stageGroupDashboards.dashboard('pipeline_insights')
.addPanel(
  grafana.row.new(title='Artifact Parser metrics'),
  gridPos={ x: 0, y: 1000, w: 24, h: 1 }
)
.addPanels(
  layout.grid([
    basic.timeseries(
      title='Parser rate',
      description='The number of parsers that ran per second',
      legendFormat='{{ parser }}',
      yAxisLabel='Number of parses',
      query=|||
        sum by (parser) (
          rate(
           ci_report_parser_duration_seconds_count{%(parsersSelector)s}[$__interval]
          )
        )
      ||| % {
        parsersSelector: parsersSelector,
      },
    ),
    basic.timeseries(
      title='P95 parser duration',
      description='The 95th Percentile of parser duration',
      yAxisLabel='Parser duration in seconds',
      legendFormat='{{ parser }}',
      query=|||
        histogram_quantile(0.95,
          sum by (parser, le) (
            rate(
              ci_report_parser_duration_seconds_bucket{%(parsersSelector)s}[$__interval]
            )
          )
        )
      ||| % {
        parsersSelector: parsersSelector,
      },
    ),

  ], cols=1, startRow=1001)
).stageGroupDashboardTrailer()
